C51 COMPILER V8.02   HC_MCU_XBR                                                            10/06/2020 17:42:47 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE HC_MCU_XBR
OBJECT MODULE PLACED IN .\Objects\HC-MCU-XBR.obj
COMPILER INVOKED BY: d:\cccc2020\TOOL\Keil\C51\BIN\C51.EXE ..\User\HC-MCU-XBR.c COMPACT BROWSE DEBUG OBJECTEXTEND PRINT(
                    -.\Listings\HC-MCU-XBR.lst) TABS(2) OBJECT(.\Objects\HC-MCU-XBR.obj)

line level    source

   1          #define ALLOCATE_EXTERN
   2          #include "HC89S003F4.h"
   3          #include "bluetooth.h"
   4          
   5          /***************************************************************************************
   6            * @说明   T1中断服务函数
   7            * @参数   无
   8            * @返回值 无
   9            * @注     无
  10          ***************************************************************************************/
  11          void TIMER1_Rpt(void) interrupt TIMER1_VECTOR
  12          {
  13   1      
  14   1      }
  15          
  16          /***************************************************************************************
  17            * @说明   UART1中断服务函数
  18            * @参数   无
  19            * @返回值   无
  20            * @注     无
  21          ***************************************************************************************/
  22          
  23          void UART1_Rpt(void) interrupt UART1_VECTOR
  24          {
  25   1        u8 i;
  26   1        
  27   1        if(SCON & 0x01)                   //判断接收中断标志位
  28   1        {
  29   2          i=SBUF;                 //转存接收数据
  30   2          uart_receive_input(i);          //sdk提供的函数
  31   2          SCON &=~ 0x01;                  //清除接收中断标志位
  32   2        }
  33   1      }
  34          
  35          void Delay_us(uint q)
  36          {
  37   1        uint j;
  38   1        for(j=0;j<q;j++)
  39   1        {
  40   2            ;
  41   2        }
  42   1      }
  43          
  44          /***************************************************************************************
  45            * @说明   系统初始化函数
  46            * @参数   无
  47            * @返回值 无
  48            * @注     无
  49          ***************************************************************************************/
  50          void InitSYS()
  51          {
  52   1        /********************************系统频率初始化***************************************/
  53   1        CLKSWR = 0x51;                    //选择内部高频RC为系统时钟，内部高频RC 2分频，Fosc=16MHz
  54   1        CLKDIV = 0x01;                    //Fosc 1分频得到Fcpu，Fcpu=16MHz 
C51 COMPILER V8.02   HC_MCU_XBR                                                            10/06/2020 17:42:47 PAGE 2   

  55   1        FREQ_CLK = 0x10;              //IAP频率指示：16MHz
  56   1        
  57   1        /**********************************低压复位初始化**************************************/
  58   1        
  59   1        /***********************************看门口初始化***************************************/
  60   1        WDTC = 0x5F;                //允许WDT复位，空闲模式下禁止WDT，选择1024分频（内部低频时钟44K）
  61   1        //WDTCCR = 0x20;  //0X20/44 =0.73秒     //0xFF;  //溢出时间约6秒
  62   1        WDTCCR = 0x0;   //关闭看门狗
  63   1      
  64   1        //溢出计算时间=（WDT分频系数*（WDTCCR+1））/内部低频RC频率
  65   1      }
  66          
  67          /***************************************************************************************
  68            * @说明   定时器初始化函数
  69            * @参数   无
  70            * @返回值 无
  71            * @注     无
  72          ***************************************************************************************/
  73          void Timer_Init()
  74          {
  75   1        /**********************************TIM1配置初始化**************************************/
  76   1        TCON1 = 0x00;             //T1定时器时钟为Fosc/12
  77   1        TMOD = 0x01;              //T1-16位重装载定时器/计数器,T0-16位定时器
  78   1      
  79   1        //Tim1计算时间  = (65536 - 0xFACB) * (1 / (Fosc /Timer分频系数))
  80   1        //        = 1333 / (16000000 / 12)
  81   1        //        = 1 ms
  82   1      
  83   1        //定时1ms
  84   1        //反推初值  = 65536 - ((1/1000) / (1/(Fosc / Timer分频系数)))
  85   1        //        = 65536 - ((1/1000) / (1/(16000000 / 12)))
  86   1        //      = 65536 - 1333
  87   1        //      = 0xFACB
  88   1        
  89   1        TH1 = 0xFA;
  90   1        TL1 = 0xCB;
  91   1      
  92   1        IE |= 0x08;               //打开T1中断
  93   1        TCON |= 0x40;             //使能T1
  94   1          
  95   1        
  96   1          
  97   1        TH0 = 0xCB;
  98   1        TL0 = 0xEB;               //T0定时时间10ms
  99   1        
 100   1        TCON |= 0x10;             //使能T0
 101   1      }
 102          
 103          /***************************************************************************************
 104            * @说明   UART1初始化函数
 105            * @参数   无
 106            * @返回值 无
 107            * @注     无
 108          ***************************************************************************************/
 109          void UART1_Init()
 110          {
 111   1        /**********************************UART配置初始化**************************************/
 112   1        P2M0 = P2M0&0xF0|0x08;              //P20设置为推挽输出 txd
 113   1      
 114   1        P0M2 = P0M2&0xF0|0x02;              //P04设置为上拉输入
 115   1      
 116   1      
C51 COMPILER V8.02   HC_MCU_XBR                                                            10/06/2020 17:42:47 PAGE 3   

 117   1        P0_4 = 1;
 118   1        TXD_MAP = 0x20;                     //TXD映射P20
 119   1        RXD_MAP = 0x04;                     //RXD映射P04
 120   1      
 121   1      
 122   1        T4CON = 0x06;                       //T4工作模式：UART1波特率发生器
 123   1        
 124   1        //波特率计算
 125   1        //波特率 = 1/16 * (T4时钟源频率 / 定时器4预分频比) / (65536 - 0xFF98)
 126   1        //       = 1/16 * ((16000000 / 1) / 104)
 127   1        //     = 9615.38(误差0.16%)
 128   1      
 129   1        //波特率9600
 130   1        //反推初值 = (65536 - ((T4时钟源频率 / 定时器4预分频比) * (1 / 16)) / 波特率)
 131   1        //       = (65536 - (16000000 * (1 / 16) / 9600))
 132   1        //       = (65536 - 104.167)
 133   1        //         = FF98
 134   1        //0xFF98->9600
 135   1        //0xFFCC->19200
 136   1        //0xFFEF->57600
 137   1        
 138   1        
 139   1          TH4 = 0xFF;
 140   1        TL4 = 0x98; //波特率9600    //0xEE;       //波特率56000
 141   1        SCON2 = 0x02;                        //8位UART，波特率可变
 142   1        SCON = 0x10;                           //允许串行接收
 143   1        IE |= 0X10;                          //使能串口中断
 144   1      }
 145          
 146          /***************************************************************************************
 147            * @说明   ADC初始化函数
 148            * @参数   无
 149            * @返回值   无
 150            * @注     无
 151          ***************************************************************************************/
 152          void ADC_Init()
 153          {
 154   1        ADCC0 |= 0x03;              //参考源为内部2V
 155   1        ADCC0 |= 0x80;              //打开ADC转换电源
 156   1        Delay_us(20);             //延时20us，确保ADC系统稳定
 157   1        ADCC1 = 0x01;             //选择外部通道1
 158   1        ADCC2 = 0x4B;         //8分频   //转换结果12位数据，数据右对齐，ADC时钟16分频-1MHZ//0X4B-8分频//0X49-4分频
 159   1      }
 160          
 161          /***************************************************************************************
 162            * @说明   IO口初始化函数
 163            * @参数   无
 164            * @返回值 无
 165            * @注     无
 166          ***************************************************************************************/
 167          void GPIO_Init()
 168          {
 169   1        P0M0 = P0M0&0x0F|0x30;          //P01设置为模拟输入     雷达adc
 170   1      }
 171          
 172          void send_data(u8 d)
 173          {
 174   1        SBUF = d;
 175   1        while(!(SCON & 0x02));
 176   1        SCON &=~ 0x02;
 177   1      }
 178          
C51 COMPILER V8.02   HC_MCU_XBR                                                            10/06/2020 17:42:47 PAGE 4   

 179          uchar read_ad(uchar ch)
 180          {
 181   1        u8 i;
 182   1        uint  ad_sum;
 183   1        
 184   1        ADCC1 = ch;           //选择外部通道
 185   1        ADCC0 |= 0x40;          //启动ADC转换
 186   1        while(!(ADCC0&0x20));     //等待ADC转换结束
 187   1        ADCC0 &=~ 0x20;         //清除标志位
 188   1        
 189   1        Delay_us(100);
 190   1        
 191   1        ad_sum=0;
 192   1      
 193   1        for(i=0;i<16;i++)
 194   1        {
 195   2          ADCC0 |= 0x40;        //启动ADC转换
 196   2          while(!(ADCC0&0x20));   //等待ADC转换结束
 197   2          ADCC0 &=~ 0x20;       //清除标志位
 198   2          ad_sum += ADCR;       //获取ADC的值
 199   2          
 200   2          Delay_us(20);
 201   2        }
 202   1        
 203   1        ADCC1 =1;
 204   1        i=ad_sum>>8;
 205   1        
 206   1        Delay_us(100);
 207   1        return(i);
 208   1      }
 209          
 210          /***************************************************************************************
 211            * @说明   主函数
 212            * @参数   无
 213            * @返回值 无
 214            * @注     无
 215          ***************************************************************************************/
 216          void main()
 217          {
 218   1        InitSYS();
 219   1        GPIO_Init();
 220   1        Timer_Init();
 221   1        UART1_Init();
 222   1        ADC_Init();
 223   1        bt_protocol_init();
 224   1      
 225   1        EA=1;
 226   1      
 227   1        while(1)
 228   1        {
 229   2          bt_uart_service();  //sdk函数
 230   2          Delay_us(100);
 231   2        }
 232   1      }
 233          
 234          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    335    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V8.02   HC_MCU_XBR                                                            10/06/2020 17:42:47 PAGE 5   

   PDATA SIZE       =   ----       2
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
