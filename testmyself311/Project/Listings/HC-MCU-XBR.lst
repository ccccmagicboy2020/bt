C51 COMPILER V8.02   HC_MCU_XBR                                                            10/07/2020 16:36:19 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE HC_MCU_XBR
OBJECT MODULE PLACED IN .\Objects\HC-MCU-XBR.obj
COMPILER INVOKED BY: d:\cccc2020\TOOL\Keil\C51\BIN\C51.EXE ..\User\HC-MCU-XBR.c BROWSE DEBUG OBJECTEXTEND PRINT(.\Listin
                    -gs\HC-MCU-XBR.lst) TABS(2) OBJECT(.\Objects\HC-MCU-XBR.obj)

line level    source

   1          #define ALLOCATE_EXTERN
   2          #include "HC89S003F4.h"
   3          //#include "Mcu_api.h"
   4          #include "bluetooth.h"
   5          
   6          #define  VERSION  0X21
*** WARNING C317 IN LINE 6 OF ..\User\HC-MCU-XBR.c: attempt to redefine macro 'VERSION'
   7          
   8          #define  TH_LOW   30000
   9          #define  TH_HIGH  4000000
  10          
  11          #define  TH_DEF   4000000
  12            
  13          //ÔÊÐíÔëÉùÖµÆ«²î·¶Î§
  14          #define  MAX_DELTA0  20000
  15          #define  MAX_DELTA1  60000
  16          
  17          #define  MAX_DELAY  1800
  18          //×î´óÑÓÊ±ÃëÊý
  19          
  20          //¸Ð¹âÃÅÏÞ-30¶ÔÓ¦8LUX×óÓÒµÄADÖµ,ÉèÖÃÎª255±íÊ¾²»¼ì²â¸Ð¹â
  21          #define  LIGHT_TH0 255
  22          //30
  23          
  24          //Ò»¸ö¼ì²âÖÜÆÚÎª0.25Ãë
  25          //#define DELAY_NUM 20
  26          
  27          
  28          //#define LIGHT_ON P0_6=0
  29          //#define LIGHT_OFF P0_6=1
  30          
  31          //void Delay_2us(u16 Cnt);    //ÑÓÊ±º¯Êý
  32          
  33          // bit Timer1_FLAG;
  34          // bit Time_10mS_FLAG;
  35          // bit Time_100mS_FLAG;
  36          // bit Time_200mS_FLAG;
  37          // bit Time_500mS_FLAG;
  38          // bit Time_1S_FLAG;
  39          // bit Time_10S_FLAG;
  40          // bit Time_1Min_FLAG;
  41          // bit Time_1H_FLAG;
  42          
  43          ulong Timer_Counter=0;
  44          
  45           //u8 Uart1_RX_Buff[10] = {0};           //ÓÃÓÚ´æ·ÅUART1½ÓÊÕÊý¾Ý
  46           //u8 Uart1_RX_Cnt = 0;                //UART1½ÓÊÕ¼ÆÊý
  47           //u8 Uart1_TX_Buff[20] = {0};           //ÓÃÓÚ´æ·ÅUART1·¢ËÍÊý¾Ý
  48           //u8 Uart1_TX_Cnt = 0;                //UART1·¢ËÍ¼ÆÊý
  49           
  50          // u16 AN1_Data = 0;
  51          // u16 AN7_Data = 0;
  52          // u8 Uart_Cnt = 0;
  53          
C51 COMPILER V8.02   HC_MCU_XBR                                                            10/07/2020 16:36:19 PAGE 2   

  54          
  55            u8 xdata SUM1_counter=0,SUM1_num=64,SUM0_num=12;
  56            ulong xdata SUM1=0,SUM0=0,SUM=0,ALL_SUM1=0,SUM10=0,SUM16=0,SUM01,SUM2;
  57            u16   xdata times=0,start_times=1;
  58            ulong  xdata TH,MAX_DELTA;
  59            u8  xdata alarm_times=0,stop_times=0;
  60          
  61            uint  xdata average,LIGHT=0;
  62            u8  xdata light_ad,light_ad0,check_light_times=8,calc_average_times=0,check_sum,send_byte;
  63            u8  xdata LIGHT_TH;
  64            u16  xdata DELAY_NUM;
  65            
  66            u8  xdata RXnum=0;
  67            u8 while_1flag = 0;
  68            u8 while_2flag = 0;
  69            u8 xdata  SWITCHflag = 0;
  70            u8      xdata lightvalue = 10;
  71            u8 xdata switchcnt = 0;
  72             
  73           unsigned char PWM3init(unsigned char ab);
  74          void Flash_EraseBlock(unsigned int fui_Address);//ÉÈÇø²Á³ý
  75          //void FLASH_WriteData(unsigned char fui_Address, unsigned int fuc_SaveData);//Ð´ÈëÒ»¸öÊý¾Ý
  76          void FLASH_WriteData(unsigned char fuc_SaveData, unsigned int fui_Address);
  77          //void Flash_WriteArr(unsigned int fui_Address,unsigned char fuc_Length,unsigned char *fucp_SaveArr);//Ð´È
             -ëÈÎÒâ³¤¶ÈÊý¾Ý
  78          void Flash_ReadArr(unsigned int fui_Address,unsigned char fuc_Length,unsigned char *fucp_SaveArr);//¶ÁÈ¡ÈÎ
             -Òâ³¤¶ÈÊý¾Ý
  79          
  80          //unsigned char guc_Write_a[5] = {0}; //Ð´ÈëÊý¾Ý
  81          unsigned char xdata guc_Read_a[6] = {0x00};     //ÓÃÓÚ´æ·Å¶ÁÈ¡µÄÊý¾Ý
  82          // unsigned char guc_Uartflag = 0;            //·¢ËÍ±êÖ¾Î»
  83          // unsigned char guc_Uartcnt = 0;           //·¢ËÍ¼ÆÊý
  84          // unsigned char guc_Uartbuf_a[2] = {0x00}; //»º´æÊý×é
  85          
  86          void Flash_ReadArr(unsigned int fui_Address,unsigned char fuc_Length,unsigned char *fucp_SaveArr)
  87          {
  88   1        while(fuc_Length--)
  89   1        *(fucp_SaveArr++)=*((unsigned char code *)(fui_Address++));//¶ÁÈ¡Êý¾Ý
  90   1      }
  91          
  92          void Delay_us(uint q)
  93          {
  94   1        uint j;
  95   1        for(j=0;j<q;j++)
  96   1        {
  97   2            ;
  98   2        }
  99   1      }
 100          
 101          void Delay_ms(uint t)
 102          {
 103   1        Timer_Counter=0;
 104   1        while(Timer_Counter<t)
 105   1        {
 106   2          WDTC |= 0x10;   //Çå¿´ÃÅ¹·
 107   2        }
 108   1        
 109   1      }
 110          
 111          void Delay_us_1(uint q1)
 112          {
 113   1        uint j;
C51 COMPILER V8.02   HC_MCU_XBR                                                            10/07/2020 16:36:19 PAGE 3   

 114   1        for(j=0;j<q1;j++)
 115   1        {
 116   2            ;
 117   2        }
 118   1      }
 119          
 120          
 121          
 122          // void Delay_ms(uint t)
 123          // {
 124          //  for(;t>0;t--)
 125          //  {
 126          //    Delay_us_1(1000);
 127          //    WDTC |= 0x10;   //Çå¿´ÃÅ¹·
 128          //  }
 129          // }
 130          
 131          /***************************************************************************************
 132            * @ËµÃ÷   ÏµÍ³³õÊ¼»¯º¯Êý
 133            * @²ÎÊý   ÎÞ
 134            * @·µ»ØÖµ ÎÞ
 135            * @×¢     ÎÞ
 136          ***************************************************************************************/
 137          void InitSYS()
 138          {
 139   1        /********************************ÏµÍ³ÆµÂÊ³õÊ¼»¯***************************************/
 140   1        
 141   1        CLKSWR = 0x51;                     //Ñ¡ÔñÄÚ²¿¸ßÆµRCÎªÏµÍ³Ê±ÖÓ£¬ÄÚ²¿¸ßÆµRC 2·ÖÆµ£¬Fosc=16MHz
 142   1        CLKDIV = 0x01;                     //Fosc 1·ÖÆµµÃµ½Fcpu£¬Fcpu=16MHz 
 143   1        FREQ_CLK = 0x10;                   //IAPÆµÂÊ
 144   1        
 145   1        /**********************************µÍÑ¹¸´Î»³õÊ¼»¯**************************************/
 146   1        
 147   1      //  BORC = 0xC0;                       //Ê¹ÄÜµÍÑ¹¸´Î»1.8V£¬´øÏû¶¶Ê¹ÄÜ
 148   1      //  BORDBC = 0x01;                     //Ïû¶¶Ê±¼äBORDBC*8TCPU+2TCPU
 149   1        
 150   1        /***********************************¿´ÃÅ¿Ú³õÊ¼»¯***************************************/
 151   1        WDTC = 0x5F;                       //ÔÊÐíWDT¸´Î»£¬¿ÕÏÐÄ£Ê½ÏÂ½ûÖ¹WDT£¬Ñ¡Ôñ1024·ÖÆµ£¨ÄÚ²¿µÍÆµÊ±ÖÓ44K£©
 152   1        WDTCCR = 0X20;  //0X20/44 =0.73Ãë           //0xFF;  //Òç³öÊ±¼äÔ¼6Ãë
 153   1        //WDTCCR = 0;
 154   1        //Òç³ö¼ÆËãÊ±¼ä=£¨WDT·ÖÆµÏµÊý*£¨WDTCCR+1£©£©/ÄÚ²¿µÍÆµRCÆµÂÊ
 155   1      }
 156          
 157          /***************************************************************************************
 158            * @ËµÃ÷   ¶¨Ê±Æ÷³õÊ¼»¯º¯Êý
 159            * @²ÎÊý   ÎÞ
 160            * @·µ»ØÖµ ÎÞ
 161            * @×¢     ÎÞ
 162          ***************************************************************************************/
 163          void Timer_Init()
 164          {
 165   1        /**********************************TIM1ÅäÖÃ³õÊ¼»¯**************************************/
 166   1        TCON1 = 0x00;             //T1¶¨Ê±Æ÷Ê±ÖÓÎªFosc/12
 167   1        TMOD = 0x01;              //T1-16Î»ÖØ×°ÔØ¶¨Ê±Æ÷/¼ÆÊýÆ÷,T0-16Î»¶¨Ê±Æ÷
 168   1      
 169   1        //Tim1¼ÆËãÊ±¼ä  = (65536 - 0xFACB) * (1 / (Fosc /Timer·ÖÆµÏµÊý))
 170   1        //        = 1333 / (16000000 / 12)
 171   1        //        = 1 ms
 172   1      
 173   1        //¶¨Ê±1ms
 174   1        //·´ÍÆ³õÖµ  = 65536 - ((1/1000) / (1/(Fosc / Timer·ÖÆµÏµÊý)))
 175   1        //        = 65536 - ((1/1000) / (1/(16000000 / 12)))
C51 COMPILER V8.02   HC_MCU_XBR                                                            10/07/2020 16:36:19 PAGE 4   

 176   1        //      = 65536 - 1333
 177   1        //      = 0xFACB
 178   1        
 179   1        TH1 = 0xFA;
 180   1        TL1 = 0xCB;
 181   1      
 182   1        IE |= 0x08;               //´ò¿ªT1ÖÐ¶Ï
 183   1        TCON |= 0x40;             //Ê¹ÄÜT1
 184   1          
 185   1        
 186   1          
 187   1        TH0 = 0xCB;
 188   1        TL0 = 0xEB;               //T0¶¨Ê±Ê±¼ä10ms
 189   1        
 190   1        TCON |= 0x10;             //Ê¹ÄÜT0
 191   1      }
 192          
 193          /***************************************************************************************
 194            * @ËµÃ÷   UART1³õÊ¼»¯º¯Êý
 195            * @²ÎÊý   ÎÞ
 196            * @·µ»ØÖµ ÎÞ
 197            * @×¢     ÎÞ
 198          ***************************************************************************************/
 199          void UART1_Init()
 200          {
 201   1        /**********************************UARTÅäÖÃ³õÊ¼»¯**************************************/
 202   1        P2M0 = P2M0&0xF0|0x08;              //P20ÉèÖÃÎªÍÆÍìÊä³ö txd
 203   1      
 204   1        P0M2 = P0M2&0xF0|0x02;              //P04ÉèÖÃÎªÉÏÀ­ÊäÈë
 205   1      
 206   1      
 207   1        P0_4 = 1;
 208   1        TXD_MAP = 0x20;                     //TXDÓ³ÉäP20
 209   1        RXD_MAP = 0x04;                     //RXDÓ³ÉäP04
 210   1      
 211   1      
 212   1        T4CON = 0x06;                       //T4¹¤×÷Ä£Ê½£ºUART1²¨ÌØÂÊ·¢ÉúÆ÷
 213   1        
 214   1        //²¨ÌØÂÊ¼ÆËã
 215   1        //²¨ÌØÂÊ = 1/16 * (T4Ê±ÖÓÔ´ÆµÂÊ / ¶¨Ê±Æ÷4Ô¤·ÖÆµ±È) / (65536 - 0xFF98)
 216   1        //       = 1/16 * ((16000000 / 1) / 104)
 217   1        //     = 9615.38(Îó²î0.16%)
 218   1      
 219   1        //²¨ÌØÂÊ9600
 220   1        //·´ÍÆ³õÖµ = (65536 - ((T4Ê±ÖÓÔ´ÆµÂÊ / ¶¨Ê±Æ÷4Ô¤·ÖÆµ±È) * (1 / 16)) / ²¨ÌØÂÊ)
 221   1        //       = (65536 - (16000000 * (1 / 16) / 9600))
 222   1        //       = (65536 - 104.167)
 223   1        //         = FF98
 224   1        //0xFF98->9600
 225   1        //0xFFCC->19200
 226   1        //0xFFEF->57600
 227   1        
 228   1        
 229   1          TH4 = 0xFF;
 230   1        TL4 = 0x98; //²¨ÌØÂÊ9600    //0xEE;       //²¨ÌØÂÊ56000
 231   1        SCON2 = 0x02;                        //8Î»UART£¬²¨ÌØÂÊ¿É±ä
 232   1        SCON = 0x10;                           //ÔÊÐí´®ÐÐ½ÓÊÕ
 233   1        IE |= 0X10;                          //Ê¹ÄÜ´®¿ÚÖÐ¶Ï
 234   1      
 235   1        //EA = 1;                              //Ê¹ÄÜ×ÜÖÐ¶Ï
 236   1      }
 237          
C51 COMPILER V8.02   HC_MCU_XBR                                                            10/07/2020 16:36:19 PAGE 5   

 238          /***************************************************************************************
 239            * @ËµÃ÷   ADC³õÊ¼»¯º¯Êý
 240            * @²ÎÊý   ÎÞ
 241            * @·µ»ØÖµ   ÎÞ
 242            * @×¢     ÎÞ
 243          ***************************************************************************************/
 244          void ADC_Init()
 245          {
 246   1        
 247   1        ADCC0 |= 0x03;              //²Î¿¼Ô´ÎªÄÚ²¿2V
 248   1        ADCC0 |= 0x80;              //´ò¿ªADC×ª»»µçÔ´
 249   1        Delay_us(20);           //ÑÓÊ±20us£¬È·±£ADCÏµÍ³ÎÈ¶¨
 250   1        ADCC1 = 0x01;             //Ñ¡ÔñÍâ²¿Í¨µÀ1
 251   1        ADCC2 = 0x4B;         //8·ÖÆµ   //×ª»»½á¹û12Î»Êý¾Ý£¬Êý¾ÝÓÒ¶ÔÆë£¬ADCÊ±ÖÓ16·ÖÆµ-1MHZ//0X4B-8·ÖÆµ//0X49-4·ÖÆµ
 252   1      }
 253          
 254          /***************************************************************************************
 255            * @ËµÃ÷   IO¿Ú³õÊ¼»¯º¯Êý
 256            * @²ÎÊý   ÎÞ
 257            * @·µ»ØÖµ ÎÞ
 258            * @×¢     ÎÞ
 259          ***************************************************************************************/
 260          void GPIO_Init()
 261          {
 262   1        //P0M0·Ö¸ß4Î»ÓëµÍ4Î»£¬µÍ4Î»¿ØÖÆP00ÊäÈëÊä³ö£¬¸ß4Î»¿ØÖÆP01ÊäÈëÊä³ö£¬ÆäËûÒÔ´ËÀàÍÆ
 263   1        //P0M1¸ß4¿ØÖÆP03£¬µÍ4¿ØÖÆP02
 264   1        //P1M2¸ß4¿ØÖÆP15£¬µÍ4¿ØÖÆP14
 265   1        
 266   1      //  P0M0 = P0M0&0xF0|0x08;          //P00ÉèÖÃÎªÍÆÍìÊä³ö
 267   1      //  P0M0 = P0M0&0x0F|0x30;          //P01ÉèÖÃÎªÄ£ÄâÊäÈë
 268   1      //  P0M3 = P0M3&0x0F|0x30;          //P07ÉèÖÃÎªÄ£ÄâÊäÈë
 269   1      //  P0M3 = P0M3&0xF0|0x08;          //P06ÉèÖÃÎªÍÆÍìÊä³ö
 270   1        
 271   1        
 272   1        P0M0 = P0M0&0xF0|0x08;              //P00ÉèÖÃÎªÍÆÍìÊä³ö     Ã»ÓÐÊ¹ÓÃ
 273   1        
 274   1        P0M0 = P0M0&0x0F|0x30;          //P01ÉèÖÃÎªÄ£ÄâÊäÈë     À×´ïadc
 275   1      
 276   1      //  P0M3 = P0M3&0x0F|0x30;          //P07ÉèÖÃÎªÄ£ÄâÊäÈë
 277   1      //  P0M0 = P0M0&0x0F|0x80;              //P01ÉèÖÃÎªÍÆÍìÊä³ö
 278   1        
 279   1        P0M2 = P0M2&0x0F|0x80;          //P05ÉèÖÃÎªÍÆÍìÊä³ö         Ã»ÓÐÊ¹ÓÃ
 280   1        
 281   1        P0M3 = P0M3&0xF0|0x03;        //P06ÉèÖÃÎªÄ£ÄâÊäÈë  //|0x08;         //P06ÉèÖÃÎªÍÆÍìÊä³ö    Ã»ÓÐÊ¹ÓÃ
 282   1        
 283   1        P0M3 = P0M3&0x0F|0x20;          //P07ÉèÖÃÎªÉÏÀ­ÊäÈë   Ã»ÓÐÊ¹ÓÃ
 284   1      
 285   1        P2M1 = P2M1&0x0F|0x80;        //P2.3
 286   1      }
 287          
 288          // u16 Read_ADC(u8 Channel)
 289          // {
 290          //  u16 ADC_Temp;
 291          //  ADCC1 = Channel;              //Ñ¡ÔñÍâ²¿Í¨µÀ1
 292          //   ADCC0 |= 0x40;         //Æô¶¯ADC×ª»»
 293          //  while(!(ADCC0&0x20));   //µÈ´ýADC×ª»»½áÊø
 294          //  ADCC0 &=~ 0x20;         //Çå³ý±êÖ¾Î»
 295          //  ADC_Temp = ADCR;        //»ñÈ¡ADCµÄÖµ
 296          //  return ADC_Temp;
 297          // }
 298          
 299          /***************************************************************************************
C51 COMPILER V8.02   HC_MCU_XBR                                                            10/07/2020 16:36:19 PAGE 6   

 300            * @ËµÃ÷   ÏµÍ³Ê±ÖÓ¼ÆÊýº¯Êý
 301            * @²ÎÊý   ÎÞ
 302            * @·µ»ØÖµ ÎÞ
 303            * @×¢     ÎÞ
 304          ***************************************************************************************/
 305          /*
 306          void System_Time_Cnt(void)
 307          {
 308              static u32 Timer1Count1 = 0;
 309              static u8 Timer1Count2 = 0;
 310              u32 Tampe = 1;
 311              if(Timer1_FLAG)              //1ms
 312              {
 313                  Timer1_FLAG = 0;
 314                  Timer1Count1 ++;
 315                  Tampe = Timer1Count1 % 10;
 316                  if(Tampe == 0)
 317                      Time_10mS_FLAG = 1;
 318                  Tampe = Timer1Count1 % 100;
 319                  if(Tampe == 0)
 320                      Time_100mS_FLAG = 1;
 321                  Tampe = Timer1Count1 % 200;
 322                  if(Tampe == 0)
 323                      Time_200mS_FLAG = 1;
 324                  Tampe = Timer1Count1 % 500;
 325                  if(Tampe == 0)
 326                      Time_500mS_FLAG = 1;
 327                  Tampe = Timer1Count1 % 1000;
 328                  if(Tampe == 0)
 329                      Time_1S_FLAG = 1;
 330                  Tampe = Timer1Count1 % 10000;
 331                  if(Tampe == 0)
 332                  {
 333                      Time_10S_FLAG = 1;
 334                      Timer1Count1 = 0;
 335                      Timer1Count2 ++;
 336                      Tampe = Timer1Count2 % 6;
 337                      if(Tampe == 0)
 338                          Time_1Min_FLAG = 1;
 339                      Tampe = Timer1Count2 % 60;
 340                      if(Tampe == 0)
 341                      {
 342                          Time_1H_FLAG = 1;
 343                          Timer1Count2 = 0;
 344                      }
 345                  }
 346              }
 347          }
 348          */
 349          
 350          /***************************************************************************************
 351            * @ËµÃ÷   ÏµÍ³ÈÎÎñ´¦Àíº¯Êý
 352            * @²ÎÊý   ÎÞ
 353            * @·µ»ØÖµ ÎÞ
 354            * @×¢     ÎÞ
 355          ***************************************************************************************/
 356          
 357          /*
 358          void System_Task(void)
 359          {
 360              u8 temp;
 361              if(Time_10mS_FLAG)
C51 COMPILER V8.02   HC_MCU_XBR                                                            10/07/2020 16:36:19 PAGE 7   

 362              {
 363                  Time_10mS_FLAG = 0;
 364                  //User TASK
 365                  
 366                  
 367                  //User TASK
 368                  if(Time_100mS_FLAG)
 369                  {
 370                      Time_100mS_FLAG = 0;
 371                      //User TASK
 372          
 373                  
 374                  
 375                      //User TASK
 376                  }
 377                  if(Time_200mS_FLAG)
 378                  {
 379                      Time_200mS_FLAG = 0;
 380                      //User TASK
 381          
 382                  
 383                  
 384                      //User TASK
 385                  }
 386                  if(Time_500mS_FLAG)
 387                  {
 388                      Time_500mS_FLAG = 0;
 389                      //User TASK
 390                      AN1_Data = Read_ADC(0x01);
 391                    
 392                      //User TASK
 393                  }
 394                   if(Time_1S_FLAG)
 395                  {
 396                      Time_1S_FLAG = 0;
 397                      //User TASK
 398          
 399                      temp = 0xFF & (AN1_Data >> 8);
 400                      SBUF = temp;
 401                      while(!(SCON & 0x02));
 402                      SCON &=~ 0x02;                 //Çå³ý·¢ËÍÖÐ¶Ï±êÖ¾Î»
 403                      temp = 0xFF & AN1_Data;
 404                      SBUF = temp;
 405                      while(!(SCON & 0x02));
 406                      SCON &=~ 0x02;                 //Çå³ý·¢ËÍÖÐ¶Ï±êÖ¾Î»
 407                      P0_0 =~ P0_0; 
 408                      //User TASK
 409                      
 410                  }
 411                  if(Time_10S_FLAG)
 412                  {
 413                      Time_10S_FLAG = 0;
 414                      //User TASK
 415                      
 416          
 417                      //User TASK
 418                  }
 419                  if(Time_1Min_FLAG)
 420                  {
 421                      Time_1Min_FLAG = 0;
 422                      //User TASK
 423                  
C51 COMPILER V8.02   HC_MCU_XBR                                                            10/07/2020 16:36:19 PAGE 8   

 424                  
 425                  
 426                      //User TASK
 427                  }
 428                  if(Time_1H_FLAG)
 429                  {
 430                      Time_1H_FLAG = 0;
 431                      //User TASK
 432                  
 433                  
 434                  
 435                      //User TASK
 436                  }
 437              }
 438          }
 439          */
 440          
 441          void send_data(u8 d)
 442          {
 443   1        SBUF = d;
 444   1        while(!(SCON & 0x02));
 445   1        SCON &=~ 0x02;
 446   1      }
 447          
 448          uchar read_ad(uchar ch)
 449          {
 450   1        u8 i;
 451   1        uint  ad_sum;
 452   1        
 453   1      //  switch (ch)
 454   1      //  {
 455   1      //    case 3:
 456   1      //      ADC_P16_AN3;
 457   1      //      break;
 458   1      //    case 4:
 459   1      //      ADC_P15_AN4;
 460   1      //      break;
 461   1      //    case 5:
 462   1      //      ADC_P14_AN5;
 463   1      //      break;
 464   1      //  }
 465   1        
 466   1        
 467   1      //  if(ch==3)
 468   1      //  {
 469   1      //    ADC_P16_AN3;
 470   1      //  }
 471   1      //  else if(ch==4)
 472   1      //  {
 473   1      //    ADC_P15_AN4;
 474   1      //  }
 475   1        
 476   1        ADCC1 = ch;             //Ñ¡ÔñÍâ²¿Í¨µÀ
 477   1        ADCC0 |= 0x40;          //Æô¶¯ADC×ª»»
 478   1        while(!(ADCC0&0x20));   //µÈ´ýADC×ª»»½áÊø
 479   1        ADCC0 &=~ 0x20;         //Çå³ý±êÖ¾Î»
 480   1        
 481   1        //ADC_Temp = ADCR;        //»ñÈ¡ADCµÄÖµ 
 482   1        
 483   1      //  delay_ms(1);
 484   1      //  
 485   1      //  ADC_TG; 
C51 COMPILER V8.02   HC_MCU_XBR                                                            10/07/2020 16:36:19 PAGE 9   

 486   1        Delay_us(100);
 487   1        
 488   1        ad_sum=0;
 489   1        //ADC_INT_IF_CLR; //ÇåÖÐ¶Ï±êÖ¾Î»
 490   1        
 491   1        
 492   1        for(i=0;i<16;i++)
 493   1        {
 494   2      //    ADC_TG; 
 495   2      //    while(ADC_IF==0){};
 496   2      //    //adc_data = ADC_DATA_RD();
 497   2      //      
 498   2      //    k=ADC_DH;
 499   2      //    k =k <<8;
 500   2      //    k+=ADC_DL;
 501   2      //      
 502   2      //    ADC_INT_IF_CLR; //ÇåÖÐ¶Ï±êÖ¾Î»
 503   2      //    ad_sum+=k;
 504   2            
 505   2      
 506   2          ADCC0 |= 0x40;          //Æô¶¯ADC×ª»»
 507   2          while(!(ADCC0&0x20));   //µÈ´ýADC×ª»»½áÊø
 508   2          ADCC0 &=~ 0x20;         //Çå³ý±êÖ¾Î»
 509   2          ad_sum += ADCR;       //»ñÈ¡ADCµÄÖµ
 510   2          
 511   2          Delay_us(20);
 512   2        }
 513   1        
 514   1        //ADC_P14_AN5;
 515   1        ADCC1 =1;
 516   1        i=ad_sum>>8;
 517   1        
 518   1        Delay_us(100);
 519   1        return(i);
 520   1        
 521   1      }
 522          
 523          void set_var(void)
 524          {
 525   1        
 526   1        Flash_ReadArr(0X2f00,6,guc_Read_a); //¶ÁÈ¡µØÖ·0x2F00ËùÔÚÉÈÇø
 527   1        
 528   1        TH=guc_Read_a[0];
 529   1        TH<<=8;
 530   1        TH+=guc_Read_a[1];
 531   1        TH*=1000;
 532   1        if(TH<TH_LOW||TH>TH_HIGH)TH=TH_DEF;
 533   1        
 534   1          
 535   1        LIGHT_TH=guc_Read_a[2];
 536   1      
 537   1        if(LIGHT_TH==0)LIGHT_TH=LIGHT_TH0;
 538   1        else 
 539   1          if(LIGHT_TH==0XFE)LIGHT_TH=255;
 540   1      
 541   1        DELAY_NUM=guc_Read_a[3];
 542   1        DELAY_NUM<<=8;
 543   1        DELAY_NUM+=guc_Read_a[4];
 544   1        if(DELAY_NUM==0||DELAY_NUM>MAX_DELAY)DELAY_NUM=5;
 545   1        
 546   1        DELAY_NUM<<=2;
 547   1        lightvalue=guc_Read_a[5];
C51 COMPILER V8.02   HC_MCU_XBR                                                            10/07/2020 16:36:19 PAGE 10  

 548   1      }
 549          
 550          
 551          void XBRHandle(void)
 552          {
 553   1        u8 i,j;
 554   1        u16 k;
 555   1      //    if(while_1flag==0)
 556   1      //    send_data(0x55);
 557   1          //while(1)
 558   1          if(while_1flag==0)
 559   1          {
 560   2            //send_data(0x66);
 561   2      //        ADC_TG; 
 562   2      //        while(ADC_IF==0){};
 563   2      //        //adc_data = ADC_DATA_RD();
 564   2      //          
 565   2      //        k = ADC_DH<<8;
 566   2      //        //adc_data =adc_data <<8;
 567   2      //        k+= ADC_DL;
 568   2      //          
 569   2      //        ADC_INT_IF_CLR; //ÇåÖÐ¶Ï±êÖ¾Î»
 570   2      
 571   2            ADCC0 |= 0x40;          //Æô¶¯ADC×ª»»
 572   2            while(!(ADCC0&0x20));   //µÈ´ýADC×ª»»½áÊø
 573   2            ADCC0 &=~ 0x20;         //Çå³ý±êÖ¾Î»
 574   2            k = ADCR;       //»ñÈ¡ADCµÄÖµ
 575   2            
 576   2            times++;
 577   2            
 578   2            SUM+=k;
 579   2      
 580   2            //¼ÆËãÐÅºÅÖµÓëÖ±Á÷µçÑ¹Æ«²îÖµ
 581   2            if(k>average){k-=average;}
 582   2            else {k=average-k;}
 583   2            SUM1+=k;
 584   2      
 585   2      
 586   2            if(times>=8192) //250ms   //12800)  //330ms
 587   2            {
 588   3      
 589   3              WDTC |= 0x10;   //Çå¿´ÃÅ¹·
 590   3              
 591   3              times=0;
 592   3      
 593   3              calc_average_times++;
 594   3            
 595   3              SUM16+=SUM;
 596   3              
 597   3              if(calc_average_times>=8) //Ã¿2.5SÖØÐÂ¼ÆËãÒ»´ÎÖ±Á÷µçÑ¹Öµ
 598   3              {
 599   4                calc_average_times=0;
 600   4                
 601   4                SUM16>>=16;
 602   4                //SUM16/=96000;//102400;
 603   4                average+=SUM16;
 604   4                average/=2;
 605   4                SUM16=0;
 606   4              }
 607   3              
 608   3              if(check_light_times<8) //2s  ¶ÁÈ¡Ò»´Î¸Ð¹âADÖµ
 609   3              {
C51 COMPILER V8.02   HC_MCU_XBR                                                            10/07/2020 16:36:19 PAGE 11  

 610   4                check_light_times++;
 611   4              }
 612   3              else
 613   3              {
 614   4                if(LIGHT==0)  
 615   4                {
 616   5                  //light_ad=READ_LIGHT();
 617   5                  light_ad=read_ad(7);
 618   5      
 619   5                  if((light_ad<=(light_ad0+2))&&(light_ad0<=(light_ad+2)))
 620   5                    light_ad=light_ad0;
 621   5      
 622   5                  light_ad0=light_ad;
 623   5      
 624   5                  check_light_times=0;
 625   5                }
 626   4              }
 627   3      
 628   3              if(SUM0==0)
 629   3              {
 630   4                SUM0=SUM1+5000; 
 631   4                if(start_times==0&&SUM0>1000000)SUM0=1000000;
 632   4              }
 633   3      
 634   3              if(SUM1_counter==0)
 635   3              {
 636   4                SUM10=SUM1;
 637   4                MAX_DELTA=1;//SUM10>>3;   
 638   4                //if(MAX_DELTA<MAX_DELTA0)MAX_DELTA=MAX_DELTA0;
 639   4              }
 640   3              
 641   3                if((SUM10<(SUM1+MAX_DELTA))&&(SUM1<(SUM10+MAX_DELTA)))//???????????
 642   3                {
 643   4                  SUM1_counter++;
 644   4                  ALL_SUM1+=SUM1;
 645   4                  SUM10=ALL_SUM1/SUM1_counter;
 646   4                  MAX_DELTA=SUM10>>3;
 647   4                  if(MAX_DELTA<MAX_DELTA0)MAX_DELTA=MAX_DELTA0;
 648   4                  if(MAX_DELTA>MAX_DELTA1)MAX_DELTA=MAX_DELTA1;
 649   4                  
 650   4                  if(SUM0>SUM10)
 651   4                  {
 652   5                    SUM=SUM0-SUM10;
 653   5                    if(SUM>80000)SUM0_num=6;
 654   5                    else if(SUM>40000)SUM0_num=9;
 655   5                    else SUM0_num=12;
 656   5                  }
 657   4                  else
 658   4                  {
 659   5                    SUM0_num=12;
 660   5                  }
 661   4                  
 662   4                  if((SUM1_counter>=SUM0_num)&&(SUM10<SUM0))
 663   4                  {
 664   5                    if(SUM1_num>16) //???????????????
 665   5                    {
 666   6                      if(SUM0_num<=9)SUM0=SUM10;
 667   6                      else if(SUM0>(SUM10+4000))
 668   6                      {
 669   7                        SUM0+=SUM10;
 670   7                        SUM0/=2;
 671   7                      }
C51 COMPILER V8.02   HC_MCU_XBR                                                            10/07/2020 16:36:19 PAGE 12  

 672   6                      SUM1_counter=0;
 673   6                      ALL_SUM1=0;
 674   6                    }
 675   5                  }
 676   4      
 677   4                  else if(SUM1_counter>=SUM1_num)
 678   4                  {
 679   5                    
 680   5      //              if(SUM0>SUM10)
 681   5      //              {
 682   5      //                if(SUM1_num>16)SUM0=SUM10;  //???????????????
 683   5      //              }
 684   5      //              else 
 685   5                      
 686   5                    if(SUM10>(SUM0+4000))
 687   5                    {
 688   6                      SUM=SUM10-SUM0;
 689   6      
 690   6                      if((SUM10<8000000)&&(SUM<400000))
 691   6          //????????????,???????????????100000?,???????
 692   6                      {
 693   7                        if(SUM1_num>16) //????????????
 694   7                        {
 695   8                          SUM0+=SUM10;
 696   8                          SUM0/=2;
 697   8                        }
 698   7                        else
 699   7                        {
 700   8                          if(SUM>300000)SUM1_num=16;
 701   8                          else if(SUM>150000)SUM1_num=12;
 702   8                          else SUM1_num=8;
 703   8                          if(SUM1_counter>=SUM1_num)
 704   8                          {
 705   9                            SUM0+=SUM10;
 706   9                            SUM0/=2;
 707   9                          }
 708   8                        }
 709   7                      }
 710   6                    }
 711   5      //              else if((LIGHT>0)&&(TH==TH_LOW))
 712   5      //              {
 713   5      //                SUM=SUM10-SUM0; 
 714   5      //                TH+=SUM;    //?????????????
 715   5      //              }
 716   5      
 717   5                    if(SUM1_counter>=SUM1_num)
 718   5                    {
 719   6                      SUM1_counter=0;
 720   6                      ALL_SUM1=0;
 721   6                    }
 722   5                  }
 723   4                }
 724   3                else
 725   3                {
 726   4                  SUM1_counter=0;
 727   4                  ALL_SUM1=0;
 728   4                }
 729   3      
 730   3      
 731   3      //        //send_byte=0x35;
 732   3      //        check_sum=0xFa;
 733   3              //send_data(0xFa);
C51 COMPILER V8.02   HC_MCU_XBR                                                            10/07/2020 16:36:19 PAGE 13  

 734   3      
 735   3      //        send_byte=TH>>15;
 736   3      //        check_sum+=send_byte;
 737   3      //        send_data(send_byte);
 738   3      
 739   3      //        //k=TH;
 740   3      //        send_byte=TH>>10;
 741   3      //        check_sum+=send_byte;
 742   3      //        send_data(send_byte);
 743   3      //          
 744   3      //        send_byte=LIGHT_TH;
 745   3      //        check_sum+=send_byte;
 746   3      //        send_data(send_byte);         
 747   3      
 748   3      //        //send_byte=light_ad;
 749   3      //        check_sum+=light_ad;
 750   3      //        send_data(light_ad);
 751   3      
 752   3      //        send_byte=average>>4;
 753   3      //        check_sum+=send_byte;
 754   3      //        send_data(send_byte);
 755   3      
 756   3      //        send_byte=SUM0>>16;
 757   3      //        check_sum+=send_byte;
 758   3      //        send_data(send_byte);
 759   3      
 760   3      //        send_byte=SUM0>>8;
 761   3      //        check_sum+=send_byte;
 762   3      //        send_data(send_byte);
 763   3      
 764   3      //        send_byte=SUM1>>16;
 765   3      //        check_sum+=send_byte;
 766   3      //        send_data(send_byte);
 767   3      
 768   3      //        send_byte=SUM1>>8;
 769   3      //        check_sum+=send_byte;
 770   3      //        send_data(send_byte);
 771   3      
 772   3      //        check_sum+=1;
 773   3      //        send_data(check_sum);
 774   3      
 775   3              if(stop_times>0)  //
 776   3              {
 777   4                stop_times--; 
 778   4                if((SUM0>(SUM01+6000))&&(SUM1<(SUM01+15000)))SUM0=SUM01+6000;
 779   4              }
 780   3              else
 781   3              {
 782   4              
 783   4                if(start_times>0)
 784   4                {
 785   5                  start_times--;
 786   5                  
 787   5                  if(start_times>0) //???????????,???????250*88ms=22S?????????          
 788   5                  {
 789   6                    //start_times++;
 790   6      /*
 791   6                    if(SUM0>600000)
 792   6                    {
 793   6                      TH=10000;
 794   6                    }
 795   6                    else */
C51 COMPILER V8.02   HC_MCU_XBR                                                            10/07/2020 16:36:19 PAGE 14  

 796   6                    if(SUM0>8000000)
 797   6                    {
 798   7                      TH=800000;
 799   7                    }
 800   6                    else
 801   6                    {
 802   7                      SUM=SUM0+TH;
 803   7                      if(SUM>9000000)
 804   7                      {
 805   8                        TH=9000000-SUM0;
 806   8                      }
 807   7                      //if(TH<30000)TH=30000;
 808   7                    }
 809   6      
 810   6                  }
 811   5                  else
 812   5                  {
 813   6                    //TH=TH_LOW;
 814   6                    //start_times=0;
 815   6      //              EA=0;
 816   6      //              set_var();
 817   6      //              EA=1;
 818   6                  }
 819   5      
 820   5                }
 821   4      
 822   4                if(SUM1>(SUM0+TH))
 823   4                {
 824   5                  //SUM=SUM1-SUM0;
 825   5      
 826   5                //  if(SUM>TH)
 827   5                //  {
 828   5                    if((light_ad<=LIGHT_TH)||(start_times>0))
 829   5                    {
 830   6      //                send_data(0xaa);
 831   6      
 832   6                      
 833   6                      //if(alarm_times<2)
 834   6                      //{
 835   6                      //  alarm_times++;
 836   6                    //    }
 837   6                      //if(alarm_times>=2)  //??????????????
 838   6                      {
 839   7                        if(LIGHT==0)SUM01=SUM0;
 840   7                        LIGHT=1;
 841   7                    
 842   7                        //PC3=0;
 843   7                        LIGHT_ON;
 844   7                        PWM3init(100);
 845   7                        //P0_6=0;
 846   7                        send_data(0xaa);
 847   7                        send_data((TH/1000)>>8);
 848   7                        send_data((TH/1000)&0xff);
 849   7                        send_data(LIGHT_TH);
 850   7                        send_data(DELAY_NUM>>10);
 851   7                        send_data(DELAY_NUM>>2);    //²âÊÔÓÃ
 852   7                        send_data(0xaa);  
 853   7                        SUM1_num=8;
 854   7      
 855   7        //                send_data(0xaa);
 856   7      
 857   7                      }
C51 COMPILER V8.02   HC_MCU_XBR                                                            10/07/2020 16:36:19 PAGE 15  

 858   6                    }
 859   5                
 860   5                  }
 861   4      
 862   4              }
 863   3      
 864   3              SUM2=SUM1;
 865   3              send_data(average>>4);
 866   3              send_data(SUM0>>16);
 867   3              send_data(SUM0>>8);
 868   3              send_data(SUM2>>16);
 869   3              send_data(SUM2>>8);     //20200927  ²âÊÔÓÃ        
 870   3              
 871   3              SUM=0;
 872   3              SUM1=0;
 873   3              
 874   3              if(LIGHT>0) //????
 875   3              {
 876   4                LIGHT++;
 877   4                if(LIGHT>DELAY_NUM)
 878   4                {
 879   5                  LIGHT=0;
 880   5                  while_1flag=1;
 881   5                  while_2flag = 0;
 882   5                  //break;
 883   5                }
 884   4              }       
 885   3              
 886   3            }
 887   2      
 888   2      
 889   2          }
 890   1          else
 891   1          {
 892   2          
 893   2              while_1flag=0;
 894   2              if(while_2flag==0)
 895   2              {
 896   3                while_2flag = 1;
 897   3                send_data(0x55);
 898   3              }
 899   2              //PC3=1;
 900   2              LIGHT_OFF;
 901   2              PWM3init(lightvalue);
 902   2              //P0_6=1;
 903   2              //send_data(0x55);
 904   2              Delay_ms(250);
 905   2      
 906   2      
 907   2              
 908   2          //    SUM=0;
 909   2          //    SUM1=0;
 910   2          //    times=0;
 911   2              
 912   2              SUM16=0;
 913   2              calc_average_times=0;
 914   2              SUM1_num=64;
 915   2              
 916   2              stop_times=2;
 917   2              //if(start_times==0)TH=TH_LOW;
 918   2              check_light_times=6;
 919   2              
C51 COMPILER V8.02   HC_MCU_XBR                                                            10/07/2020 16:36:19 PAGE 16  

 920   2              SUM1_counter=0;
 921   2              ALL_SUM1=0;
 922   2      
 923   2          //    send_data(0xdd);
 924   2          //    send_data(0xdd);
 925   2          }
 926   1      
 927   1      }
*** WARNING C280 IN LINE 553 OF ..\USER\HC-MCU-XBR.C: 'i': unreferenced local variable
*** WARNING C280 IN LINE 553 OF ..\USER\HC-MCU-XBR.C: 'j': unreferenced local variable
 928          
 929          
 930          void wait1(void)
 931          {
 932   1        u8 i,j;
 933   1      
 934   1        //µÈ´ýÖ±Á÷µçÑ¹ÎÈ¶¨
 935   1        j=0;
 936   1        while(1)
 937   1        {
 938   2          SUM=0;
 939   2          
 940   2          
 941   2      //    for(i=0;i<4;i++)  //0.52s
 942   2      //    {
 943   2      //      for(t=0;t<8192;t++) //0.13s
 944   2      //      {
 945   2      
 946   2      //        ADCC0 |= 0x40;          //Æô¶¯ADC×ª»»
 947   2      //        while(!(ADCC0&0x20));   //µÈ´ýADC×ª»»½áÊø
 948   2      //        ADCC0 &=~ 0x20;         //Çå³ý±êÖ¾Î»
 949   2      //        k = ADCR;       //»ñÈ¡ADCµÄÖµ
 950   2      //        
 951   2      //        SUM+=k;
 952   2      //  
 953   2      //      }
 954   2      //      
 955   2      //      WDTC |= 0x10;   //Çå¿´ÃÅ¹·
 956   2            
 957   2      
 958   2            for(i=0;i<128;i++)  //
 959   2            {
 960   3      
 961   3              ADCC0 |= 0x40;          //Æô¶¯ADC×ª»»
 962   3              while(!(ADCC0&0x20));   //µÈ´ýADC×ª»»½áÊø
 963   3              ADCC0 &=~ 0x20;         //Çå³ý±êÖ¾Î»
 964   3              //k = ADCR;       //»ñÈ¡ADCµÄÖµ
 965   3              
 966   3              SUM+=ADCR;
 967   3              
 968   3            }
 969   2      
 970   2      //·¢ËÍ¸Ð¹âADÖµ
 971   2      //        send_byte=0xFA;
 972   2      //        check_sum=send_byte;
 973   2      //        send_data(send_byte);
 974   2      
 975   2      //        //send_byte=light_ad;
 976   2      //        check_sum+=light_ad;
 977   2      //        send_data(light_ad);
 978   2      
 979   2      //        check_sum+=light_ad;
C51 COMPILER V8.02   HC_MCU_XBR                                                            10/07/2020 16:36:19 PAGE 17  

 980   2      //        send_data(light_ad);
 981   2      //        
 982   2      //        check_sum+=1;
 983   2      //        send_data(check_sum);
 984   2      
 985   2      
 986   2      
 987   2        //}
 988   2          
 989   2          Delay_ms(400);
 990   2            
 991   2      
 992   2          
 993   2          //WDTC |= 0x10;   //Çå¿´ÃÅ¹·
 994   2      
 995   2          i=SUM>>11;
 996   2          if((i>12)&&(i<141)&&(j>20))break;
 997   2      
 998   2          j++;
 999   2      
1000   2          if(j>80)break;  //??35????????????1.1V???????
1001   2      
1002   2        }
1003   1      }
1004          void wait2(void)
1005          {
1006   1        u8 i,j;
1007   1        u16 k,t;
1008   1      
1009   1        SUM=0;
1010   1      
1011   1      
1012   1          for(i=0;i<8;i++)
1013   1          {
1014   2            for(t=0;t<8192;t++) 
1015   2            {
1016   3      //        ADC_TG; 
1017   3      //        while(ADC_IF==0){};
1018   3      //        //adc_data = ADC_DATA_RD();
1019   3      //          
1020   3      //        k = ADC_DH<<8;
1021   3      //        //adc_data =adc_data <<8;
1022   3      //        k+= ADC_DL;
1023   3      //          
1024   3      //        ADC_INT_IF_CLR; //ÇåÖÐ¶Ï±êÖ¾Î»
1025   3          
1026   3              ADCC0 |= 0x40;          //Æô¶¯ADC×ª»»
1027   3              while(!(ADCC0&0x20));   //µÈ´ýADC×ª»»½áÊø
1028   3              ADCC0 &=~ 0x20;         //Çå³ý±êÖ¾Î»
1029   3              k = ADCR;       //»ñÈ¡ADCµÄÖµ
1030   3              
1031   3              SUM+=k;
1032   3        
1033   3            }
1034   2            WDTC |= 0x10;   //Çå¿´ÃÅ¹·
1035   2      
1036   2          }
1037   1      
1038   1          average=SUM>>16;
1039   1      
1040   1      
1041   1      //  light_ad=read_ad(7);
C51 COMPILER V8.02   HC_MCU_XBR                                                            10/07/2020 16:36:19 PAGE 18  

1042   1      //  light_ad0=light_ad;
1043   1      
1044   1      //  Delay_ms(4);  //4ms
1045   1      }
*** WARNING C280 IN LINE 1006 OF ..\USER\HC-MCU-XBR.C: 'j': unreferenced local variable
1046          
1047          unsigned char PWM3init(unsigned char ab)
1048          {
1049   1        float i11;
1050   1        unsigned char j11;
1051   1        i11=ab*255/100;
1052   1        j11=i11;
1053   1      /************************************PWM3³õÊ¼»¯****************************************/
1054   1        //P0M3 = P0M3&0xF0|0x08;    //P06ÉèÖÃÎªÍÆÍìÊä³ö
1055   1        PWM3_MAP = 0x05;          //PWM3Ó³ÉäP05¿Ú
1056   1        
1057   1          //ÖÜÆÚ¼ÆËã  = 0xFF / (Fosc / PWM·ÖÆµÏµÊý)   £¨Fosc¼ûÏµÍ³Ê±ÖÓÅäÖÃµÄ²¿·Ö£©
1058   1        //      = 0xFF /(16000000 / 4)      
1059   1        //      = 255 /4000000
1060   1        //      = 63.75us   ¼´15.69KHZ    
1061   1      
1062   1        PWM3P = 0xFF;             //PWMÖÜÆÚÎª0xFF
1063   1        //ÓÐÐ§µçÆ½Ê±¼ä¼ÆËã£¨¼´Õ¼¿Õ±È£©  
1064   1        //      = 0x55 / (Fosc / PWM·ÖÆµÏµÊý)   £¨Fosc¼ûÏµÍ³Ê±ÖÓÅäÖÃµÄ²¿·Ö£©
1065   1        //      = 0x55 /(16000000 / 4)      
1066   1        //      = 85 /4000000
1067   1        //      = 21.25us   Õ¼¿Õ±ÈÎª 21.25 / 63.75 = 34%
1068   1      
1069   1        PWM3D = j11;              //PWMÕ¼¿Õ±ÈÉèÖÃ
1070   1        PWM3C = 0x94;             //Ê¹ÄÜPWM3£¬¹Ø±ÕÖÐ¶Ï£¬ÔÊÐíÊä³ö£¬Ê±ÖÓ16·ÖÆµ
1071   1      }
*** WARNING C173 IN LINE 1071 OF ..\USER\HC-MCU-XBR.C: missing return-expression
1072          
1073          /***************************************************************************************
1074            * @ËµÃ÷   Ö÷º¯Êý
1075            * @²ÎÊý   ÎÞ
1076            * @·µ»ØÖµ ÎÞ
1077            * @×¢     ÎÞ
1078          ***************************************************************************************/
1079          void main()
1080          {
1081   1        u8 i,j;
1082   1        bt_protocol_init();
1083   1        InitSYS();
1084   1        GPIO_Init();
1085   1        LIGHT_ON;
1086   1        //P0_6=0;
1087   1        PWM3init(100);
1088   1        Timer_Init();
1089   1        UART1_Init();
1090   1        ADC_Init();
1091   1      
1092   1        P2_3 = 1;
1093   1      
1094   1        LVDC = 0xAA;              //LVDÉèÖÃ2.4V,½ûÖ¹ÖÐ¶Ï
1095   1        //  Ïû¶¶Ê±¼ä =  (0xFF + 2) * 1/Fcpu
1096   1        //       =  (0xFF + 2) / 16000000 £¨µ±Ç°µÄCPUÊ±ÖÓ£©
1097   1        //       =  16.0625us
1098   1        LVDDBC = 0xFF;            //ÉèÖÃÏû¶¶Ê±¼ä
1099   1        LVDC &=~ 0x08;            //Çå³ýLVDÖÐ¶Ï±êÖ¾Î»   
1100   1      //  
1101   1        EA=1;
C51 COMPILER V8.02   HC_MCU_XBR                                                            10/07/2020 16:36:19 PAGE 19  

1102   1        
1103   1        Delay_ms(200);
1104   1        
1105   1        LIGHT_ON;
1106   1        PWM3init(100);
1107   1        SWITCHflag = 1;
1108   1        light_ad=read_ad(7);
1109   1        light_ad0=light_ad;
1110   1        
1111   1        EA=0;
1112   1        set_var();
1113   1        
1114   1        //for(i=0;i<5;i++)send_data(guc_Read_a[i]);
1115   1        
1116   1      //  TXdata[0]=VERSION;
1117   1      //  t=TH/1000;
1118   1      //  TXdata[1]=t>>8;
1119   1      //  TXdata[2]=t;
1120   1      //  TXdata[3]=LIGHT_TH;
1121   1      //  t=DELAY_NUM/4;
1122   1      //  TXdata[4]=t>>8;
1123   1      //  TXdata[5]=t;
1124   1      
1125   1      //  TXdata[6]=light_ad;
1126   1      
1127   1      //  for(i=0;i<7;i++)send_data(TXdata[i]); 
1128   1        
1129   1        EA=1;
1130   1        
1131   1      
1132   1        wait1();
1133   1      
1134   1        
1135   1        //Delay_ms(200);
1136   1        PWM3init(lightvalue);
1137   1        LIGHT_OFF;
1138   1        //P0_6=1;
1139   1        Delay_ms(300);
1140   1        
1141   1        wait2();
1142   1      
1143   1        SUM=0;
1144   1        P2_3 = 1;
1145   1        while(1)
1146   1        {
1147   2          WDTC |= 0x10;   //Çå¿´ÃÅ¹·
1148   2          
1149   2          P2_3 = 0;
1150   2          bt_uart_service();
1151   2          P2_3 = 1;
1152   2      
1153   2          XBRHandle();
1154   2        
1155   2      
1156   2      
1157   2        } 
1158   1        
1159   1      //  while(1)
1160   1      //  {
1161   1      //    System_Time_Cnt();
1162   1      //    System_Task();
1163   1      //    WDTC |= 0x10;              //Çå¹·
C51 COMPILER V8.02   HC_MCU_XBR                                                            10/07/2020 16:36:19 PAGE 20  

1164   1      //  }
1165   1      
1166   1        
1167   1        
1168   1      }
*** WARNING C280 IN LINE 1081 OF ..\USER\HC-MCU-XBR.C: 'i': unreferenced local variable
*** WARNING C280 IN LINE 1081 OF ..\USER\HC-MCU-XBR.C: 'j': unreferenced local variable
1169          
1170          /***************************************************************************************
1171            * @ËµÃ÷   T1ÖÐ¶Ï·þÎñº¯Êý
1172            * @²ÎÊý   ÎÞ
1173            * @·µ»ØÖµ ÎÞ
1174            * @×¢     ÎÞ
1175          ***************************************************************************************/
1176          void TIMER1_Rpt(void) interrupt TIMER1_VECTOR
1177          {
1178   1        //Timer1_FLAG = 1;    //1mS
1179   1        Timer_Counter++;
1180   1      
1181   1        //if(SWITCHflag==1)
1182   1        //{
1183   1        //  colorRcnt++;
1184   1        //  if(colorRcnt)
1185   1      ///
1186   1      
1187   1        //}
1188   1      
1189   1      
1190   1        
1191   1      }
1192          
1193          /***************************************************************************************
1194            * @ËµÃ÷   UART1ÖÐ¶Ï·þÎñº¯Êý
1195            * @²ÎÊý   ÎÞ
1196            * @·µ»ØÖµ ÎÞ
1197            * @×¢     ÎÞ
1198          ***************************************************************************************/
1199          
1200          void UART1_Rpt(void) interrupt UART1_VECTOR
1201          {
1202   1        u8 i;
1203   1        //u16 t;
1204   1        
1205   1        if(SCON & 0x01)                       //ÅÐ¶Ï½ÓÊÕÖÐ¶Ï±êÖ¾Î»
1206   1        {
1207   2            i=SBUF;
1208   2            uart_receive_input(i);
1209   2            SCON &=~ 0x01;                    //Çå³ý½ÓÊÕÖÐ¶Ï±êÖ¾Î»
1210   2            EA=1;
1211   2        }
1212   1      }
1213          
1214          void UART2_Rpt(void) interrupt UART2_VECTOR
1215          {
1216   1      }
1217          
1218          // void Delay_2us(u16 Cnt)
1219          // {
1220          //  while(Cnt--); 
1221          // }
1222          
1223          void Flash_EraseBlock(unsigned int fui_Address)
C51 COMPILER V8.02   HC_MCU_XBR                                                            10/07/2020 16:36:19 PAGE 21  

1224          {
1225   1        while(1)
1226   1        {
1227   2          LVDC &=~ 0x08;        //Çå³ýLVDÖÐ¶Ï±êÖ¾Î»
1228   2          P0_0=0;   
1229   2          if((LVDC&0x08)==0)    break;
1230   2        }
1231   1        P0_0=1;   
1232   1        EA=0;
1233   1        IAP_CMD = 0xF00F;       //Flash½âËø
1234   1        IAP_ADDR = fui_Address; //Ð´Èë²Á³ýµØÖ·
1235   1        IAP_CMD = 0xD22D;       //Ñ¡Ôñ²Ù×÷·½Ê½£¬ ÉÈÇø²Á³ý
1236   1        IAP_CMD = 0xE11E;       //´¥·¢ºóIAP_ADDRL&IAP_ADDRHÖ¸Ïò0xFF£¬Í¬Ê±×Ô¶¯Ëø¶¨
1237   1        //EA=1;
1238   1      }
1239          
1240          /**
1241            * @ËµÃ÷   Ð´ÈëÒ»¸ö×Ö½ÚÊý¾Ýµ½FlashÀïÃæ
1242            *         ¸Ãº¯ÊýÐè¾ø¶ÔµØÖ·±àÒë£¬ÏêÇéÇë²éÔÄIAP²Ù×÷Ó¦ÓÃÊÖ²á
1243            * @²ÎÊý   fui_Address £ºFLASHµØÖ·
1244            * @²ÎÊý   fucp_SaveData£ºÐ´ÈëµÄÊý¾Ý
1245            * @·µ»ØÖµ ÎÞ
1246            * @×¢     Ð´Ö®Ç°±ØÐëÏÈ¶Ô²Ù×÷µÄÉÈÇø½øÐÐ²Á³ý
1247            */
1248          void FLASH_WriteData(unsigned char fuc_SaveData, unsigned int fui_Address)
1249          {
1250   1        while(1)
1251   1        {
1252   2          LVDC &=~ 0x08;         //Çå³ýLVDÖÐ¶Ï±êÖ¾Î»
1253   2          P0_0=0;   
1254   2          if((LVDC&0x08)==0)    break;
1255   2        }
1256   1        P0_0=1; 
1257   1        EA=0;
1258   1        IAP_DATA = fuc_SaveData;
1259   1        IAP_CMD=0xF00F;          //Flash½âËø
1260   1        IAP_ADDR = fui_Address;
1261   1        IAP_CMD=0xB44B;          //×Ö½Ú±à³Ì
1262   1        IAP_CMD=0xE11E;          //´¥·¢Ò»´Î²Ù×÷
1263   1        //EA=1;
1264   1      }
1265          
1266          /**
1267            * @ËµÃ÷   Ð´ÈëÈÎÒâ³¤¶ÈµÄÊý¾Ýµ½FLASHÀïÃæ
1268            *         ¸Ãº¯ÊýÐè¾ø¶ÔµØÖ·±àÒë£¬ÏêÇéÇë²éÔÄIAP²Ù×÷Ó¦ÓÃÊÖ²á
1269            * @²ÎÊý   fui_Address £ºFLASHÆðÊ¼µØÖ·
1270            * @²ÎÊý   fuc_Length £º Ð´ÈëÊý¾Ý³¤¶È
1271            *         È¡Öµ·¶Î§£º0x00-0xFF
1272            * @²ÎÊý  *fucp_SaveArr£ºÐ´ÈëµÄÊý¾Ý´æ·ÅÇøÓòµÄÊ×µØÖ·
1273            * @·µ»ØÖµ ÎÞ
1274            * @×¢     Ð´Ö®Ç°±ØÐëÏÈ¶Ô²Ù×÷µÄÉÈÇø½øÐÐ²Á³ý
1275            */
1276          
1277          // void Flash_WriteArr(unsigned int fui_Address,unsigned char fuc_Length,unsigned char *fucp_SaveArr)
1278          // {
1279          //  unsigned char fui_i = 0;
1280          //  EA=0;
1281          //  for(fui_i=0;fui_i<fuc_Length;fui_i++)
1282          //  {
1283          //    FLASH_WriteData(*(fucp_SaveArr++), fui_Address++); 
1284          //  }
1285          //  EA=1;
C51 COMPILER V8.02   HC_MCU_XBR                                                            10/07/2020 16:36:19 PAGE 22  

1286          // }
1287          
1288          /**
1289            * @ËµÃ÷   ´ÓFLASHÀïÃæ¶ÁÈ¡ÈÎÒâ³¤¶ÈµÄÊý¾Ý
1290            * @²ÎÊý   fui_Address £ºFLASHÆðÊ¼µØÖ·
1291            * @²ÎÊý   fuc_Length £º¶ÁÈ¡Êý¾Ý³¤¶È
1292            *         È¡Öµ·¶Î§£º0x00-0xFF
1293            * @²ÎÊý  *fucp_SaveArr£º¶ÁÈ¡Êý¾Ý´æ·ÅµÄÇøÓòÊ×µØÖ·
1294            * @·µ»ØÖµ ÎÞ
1295            * @×¢     ÎÞ
1296            */
1297          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3703    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     72    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6      19
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  7 WARNING(S),  0 ERROR(S)
