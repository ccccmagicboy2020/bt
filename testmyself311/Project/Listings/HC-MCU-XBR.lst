C51 COMPILER V9.52.0.0   HC_MCU_XBR                                                        09/28/2020 17:37:44 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE HC_MCU_XBR
OBJECT MODULE PLACED IN .\Objects\HC-MCU-XBR.obj
COMPILER INVOKED BY: C:\Keil4\C51\BIN\C51.EXE ..\User\HC-MCU-XBR.c BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\HC-MCU-XBR
                    -.lst) TABS(2) OBJECT(.\Objects\HC-MCU-XBR.obj)

line level    source

   1          #define ALLOCATE_EXTERN
   2          #include "HC89S003F4.h"
   3          //#include "Mcu_api.h"
   4          #include "bluetooth.h"
   5          
   6          #define  VERSION  0X21
*** WARNING C317 IN LINE 6 OF ..\User\HC-MCU-XBR.c: attempt to redefine macro 'VERSION'
   7          
   8          #define  TH_LOW   30000
   9          #define  TH_HIGH  4000000
  10          
  11          #define  TH_DEF   40000
  12            
  13          //ÔÊÐíÔëÉùÖµÆ«²î·¶Î§
  14          #define  MAX_DELTA0  20000
  15          #define  MAX_DELTA1  60000
  16          
  17          #define  MAX_DELAY  1800
  18          //×î´óÑÓÊ±ÃëÊý
  19          
  20          //¸Ð¹âÃÅÏÞ-30¶ÔÓ¦8LUX×óÓÒµÄADÖµ,ÉèÖÃÎª255±íÊ¾²»¼ì²â¸Ð¹â
  21          #define  LIGHT_TH0 255
  22          //30
  23          
  24          //Ò»¸ö¼ì²âÖÜÆÚÎª0.25Ãë
  25          //#define DELAY_NUM 20
  26          
  27          
  28          //#define LIGHT_ON P0_6=0
  29          //#define LIGHT_OFF P0_6=1
  30          
  31          //void Delay_2us(u16 Cnt);    //ÑÓÊ±º¯Êý
  32          
  33          // bit Timer1_FLAG;
  34          // bit Time_10mS_FLAG;
  35          // bit Time_100mS_FLAG;
  36          // bit Time_200mS_FLAG;
  37          // bit Time_500mS_FLAG;
  38          // bit Time_1S_FLAG;
  39          // bit Time_10S_FLAG;
  40          // bit Time_1Min_FLAG;
  41          // bit Time_1H_FLAG;
  42          
  43          ulong Timer_Counter=0;
  44          
  45           //u8 Uart1_RX_Buff[10] = {0};           //ÓÃÓÚ´æ·ÅUART1½ÓÊÕÊý¾Ý
  46           //u8 Uart1_RX_Cnt = 0;                //UART1½ÓÊÕ¼ÆÊý
  47           //u8 Uart1_TX_Buff[20] = {0};           //ÓÃÓÚ´æ·ÅUART1·¢ËÍÊý¾Ý
  48           //u8 Uart1_TX_Cnt = 0;                //UART1·¢ËÍ¼ÆÊý
  49           
  50          // u16 AN1_Data = 0;
  51          // u16 AN7_Data = 0;
  52          // u8 Uart_Cnt = 0;
  53          
C51 COMPILER V9.52.0.0   HC_MCU_XBR                                                        09/28/2020 17:37:44 PAGE 2   

  54          
  55            u8 xdata SUM1_counter=0,SUM1_num=64,SUM0_num=12;
  56            ulong xdata SUM1=0,SUM0=0,SUM=0,ALL_SUM1=0,SUM10=0,SUM16=0,SUM01,SUM2;
  57            u16   xdata times=0,start_times=1;
  58            ulong  xdata TH,MAX_DELTA;
  59            u8  xdata alarm_times=0,stop_times=0;
  60          
  61            uint  xdata average,LIGHT=0;
  62            u8  xdata light_ad,light_ad0,check_light_times=8,calc_average_times=0,check_sum,send_byte;
  63            u8  xdata LIGHT_TH;
  64            u16  xdata DELAY_NUM;
  65            
  66            u8  xdata RXnum=0;
  67            u8 while_1flag = 0;
  68            u8 while_2flag = 0;
  69            u8 xdata  SWITCHflag = 0;
  70            u8      xdata lightvalue = 10;
  71            u8 xdata switchcnt = 0;
  72             
  73           unsigned char PWM3init(unsigned char ab);
  74          void Flash_EraseBlock(unsigned int fui_Address);//ÉÈÇø²Á³ý
  75          //void FLASH_WriteData(unsigned char fui_Address, unsigned int fuc_SaveData);//Ð´ÈëÒ»¸öÊý¾Ý
  76          void FLASH_WriteData(unsigned char fuc_SaveData, unsigned int fui_Address);
  77          //void Flash_WriteArr(unsigned int fui_Address,unsigned char fuc_Length,unsigned char *fucp_SaveArr);//Ð´È
             -ëÈÎÒâ³¤¶ÈÊý¾Ý
  78          void Flash_ReadArr(unsigned int fui_Address,unsigned char fuc_Length,unsigned char *fucp_SaveArr);//¶ÁÈ¡ÈÎ
             -Òâ³¤¶ÈÊý¾Ý
  79          
  80          //unsigned char guc_Write_a[5] = {0}; //Ð´ÈëÊý¾Ý
  81          unsigned char xdata guc_Read_a[6] = {0x00};     //ÓÃÓÚ´æ·Å¶ÁÈ¡µÄÊý¾Ý
  82          // unsigned char guc_Uartflag = 0;            //·¢ËÍ±êÖ¾Î»
  83          // unsigned char guc_Uartcnt = 0;           //·¢ËÍ¼ÆÊý
  84          // unsigned char guc_Uartbuf_a[2] = {0x00}; //»º´æÊý×é
  85          
  86          void Flash_ReadArr(unsigned int fui_Address,unsigned char fuc_Length,unsigned char *fucp_SaveArr)
  87          {
  88   1        while(fuc_Length--)
  89   1        *(fucp_SaveArr++)=*((unsigned char code *)(fui_Address++));//¶ÁÈ¡Êý¾Ý
  90   1      }
  91          
  92          void Delay_us(uint q)
  93          {
  94   1        uint j;
  95   1        for(j=0;j<q;j++)
  96   1        {
  97   2            ;
  98   2        }
  99   1      }
 100          
 101          void Delay_ms(uint t)
 102          {
 103   1        Timer_Counter=0;
 104   1        while(Timer_Counter<t)
 105   1        {
 106   2          WDTC |= 0x10;   //Çå¿´ÃÅ¹·
 107   2        }
 108   1        
 109   1      }
 110          
 111          void Delay_us_1(uint q1)
 112          {
 113   1        uint j;
C51 COMPILER V9.52.0.0   HC_MCU_XBR                                                        09/28/2020 17:37:44 PAGE 3   

 114   1        for(j=0;j<q1;j++)
 115   1        {
 116   2            ;
 117   2        }
 118   1      }
 119          
 120          
 121          
 122          // void Delay_ms(uint t)
 123          // {
 124          //  for(;t>0;t--)
 125          //  {
 126          //    Delay_us_1(1000);
 127          //    WDTC |= 0x10;   //Çå¿´ÃÅ¹·
 128          //  }
 129          // }
 130          
 131          /***************************************************************************************
 132            * @ËµÃ÷   ÏµÍ³³õÊ¼»¯º¯Êý
 133            * @²ÎÊý   ÎÞ
 134            * @·µ»ØÖµ ÎÞ
 135            * @×¢     ÎÞ
 136          ***************************************************************************************/
 137          void InitSYS()
 138          {
 139   1        /********************************ÏµÍ³ÆµÂÊ³õÊ¼»¯***************************************/
 140   1        
 141   1        CLKSWR = 0x51;                     //Ñ¡ÔñÄÚ²¿¸ßÆµRCÎªÏµÍ³Ê±ÖÓ£¬ÄÚ²¿¸ßÆµRC 2·ÖÆµ£¬Fosc=16MHz
 142   1        CLKDIV = 0x01;                     //Fosc 1·ÖÆµµÃµ½Fcpu£¬Fcpu=16MHz 
 143   1        FREQ_CLK = 0x10;                   //IAPÆµÂÊ
 144   1        
 145   1        /**********************************µÍÑ¹¸´Î»³õÊ¼»¯**************************************/
 146   1        
 147   1      //  BORC = 0xC0;                       //Ê¹ÄÜµÍÑ¹¸´Î»1.8V£¬´øÏû¶¶Ê¹ÄÜ
 148   1      //  BORDBC = 0x01;                     //Ïû¶¶Ê±¼äBORDBC*8TCPU+2TCPU
 149   1        
 150   1        /***********************************¿´ÃÅ¿Ú³õÊ¼»¯***************************************/
 151   1        WDTC = 0x5F;                       //ÔÊÐíWDT¸´Î»£¬¿ÕÏÐÄ£Ê½ÏÂ½ûÖ¹WDT£¬Ñ¡Ôñ1024·ÖÆµ£¨ÄÚ²¿µÍÆµÊ±ÖÓ44K£©
 152   1        WDTCCR = 0X20;  //0X20/44 =0.73Ãë           //0xFF;  //Òç³öÊ±¼äÔ¼6Ãë
 153   1        //Òç³ö¼ÆËãÊ±¼ä=£¨WDT·ÖÆµÏµÊý*£¨WDTCCR+1£©£©/ÄÚ²¿µÍÆµRCÆµÂÊ
 154   1      }
 155          
 156          /***************************************************************************************
 157            * @ËµÃ÷   ¶¨Ê±Æ÷³õÊ¼»¯º¯Êý
 158            * @²ÎÊý   ÎÞ
 159            * @·µ»ØÖµ ÎÞ
 160            * @×¢     ÎÞ
 161          ***************************************************************************************/
 162          void Timer_Init()
 163          {
 164   1        /**********************************TIM1ÅäÖÃ³õÊ¼»¯**************************************/
 165   1        TCON1 = 0x00;             //T1¶¨Ê±Æ÷Ê±ÖÓÎªFosc
 166   1        TMOD = 0x01;              //T1-16Î»ÖØ×°ÔØ¶¨Ê±Æ÷/¼ÆÊýÆ÷,T0-16Î»¶¨Ê±Æ÷
 167   1      
 168   1        //Tim1¼ÆËãÊ±¼ä  = (65536 - 0xFACB) * (1 / (Fosc /Timer·ÖÆµÏµÊý))
 169   1        //        = 1333 / (16000000 / 12)
 170   1        //        = 1 ms
 171   1      
 172   1        //¶¨Ê±1ms
 173   1        //·´ÍÆ³õÖµ  = 65536 - ((1/1000) / (1/(Fosc / Timer·ÖÆµÏµÊý)))
 174   1        //        = 65536 - ((1/1000) / (1/(16000000 / 12)))
 175   1        //      = 65536 - 1333
C51 COMPILER V9.52.0.0   HC_MCU_XBR                                                        09/28/2020 17:37:44 PAGE 4   

 176   1        //      = 0xFACB
 177   1        
 178   1        TH1 = 0xFA;
 179   1        TL1 = 0xCB;
 180   1        IE |= 0x08;               //´ò¿ªT1ÖÐ¶Ï
 181   1        TCON |= 0x40;             //Ê¹ÄÜT1
 182   1          
 183   1        
 184   1          
 185   1        TH0 = 0xCB;
 186   1        TL0 = 0xEB;               //T0¶¨Ê±Ê±¼ä10ms
 187   1        
 188   1        TCON |= 0x10;             //Ê¹ÄÜT0
 189   1      }
 190          
 191          /***************************************************************************************
 192            * @ËµÃ÷   UART1³õÊ¼»¯º¯Êý
 193            * @²ÎÊý   ÎÞ
 194            * @·µ»ØÖµ ÎÞ
 195            * @×¢     ÎÞ
 196          ***************************************************************************************/
 197          void UART1_Init()
 198          {
 199   1        /**********************************UARTÅäÖÃ³õÊ¼»¯**************************************/
 200   1        P2M0 = P2M0&0xF0|0x08;              //P20ÉèÖÃÎªÍÆÍìÊä³ö
 201   1        P0M2 = P0M2&0xF0|0x02;              //P04ÉèÖÃÎªÉÏÀ­ÊäÈë
 202   1        P0_4 = 1;
 203   1        TXD_MAP = 0x20;                     //TXDÓ³ÉäP20
 204   1        RXD_MAP = 0x04;                     //RXDÓ³ÉäP04    
 205   1        T4CON = 0x06;                       //T4¹¤×÷Ä£Ê½£ºUART1²¨ÌØÂÊ·¢ÉúÆ÷
 206   1        
 207   1        //²¨ÌØÂÊ¼ÆËã
 208   1        //²¨ÌØÂÊ = 1/16 * (T4Ê±ÖÓÔ´ÆµÂÊ / ¶¨Ê±Æ÷4Ô¤·ÖÆµ±È) / (65536 - 0xFF98)
 209   1        //       = 1/16 * ((16000000 / 1) / 104)
 210   1        //     = 9615.38(Îó²î0.16%)
 211   1      
 212   1        //²¨ÌØÂÊ9600
 213   1        //·´ÍÆ³õÖµ = (65536 - ((T4Ê±ÖÓÔ´ÆµÂÊ / ¶¨Ê±Æ÷4Ô¤·ÖÆµ±È) * (1 / 16)) / ²¨ÌØÂÊ)
 214   1        //       = (65536 - (16000000 * (1 / 16) / 9600))
 215   1        //       = (65536 - 104.167)
 216   1        //         = FF98
 217   1        //0xFF98->9600
 218   1        //0xFFCC->19200
 219   1        //0xFFEF->57600
 220   1        
 221   1        
 222   1        TH4 = 0xFF;
 223   1        TL4 = 0x98; //²¨ÌØÂÊ9600    //0xEE;       //²¨ÌØÂÊ56000
 224   1        SCON2 = 0x02;                        //8Î»UART£¬²¨ÌØÂÊ¿É±ä
 225   1        SCON = 0x10;                         //ÔÊÐí´®ÐÐ½ÓÊÕ
 226   1        IE |= 0X10;                          //Ê¹ÄÜ´®¿ÚÖÐ¶Ï
 227   1        //EA = 1;                              //Ê¹ÄÜ×ÜÖÐ¶Ï
 228   1      }
 229          
 230          /***************************************************************************************
 231            * @ËµÃ÷   ADC³õÊ¼»¯º¯Êý
 232            * @²ÎÊý   ÎÞ
 233            * @·µ»ØÖµ ÎÞ
 234            * @×¢     ÎÞ
 235          ***************************************************************************************/
 236          void ADC_Init()
 237          {
C51 COMPILER V9.52.0.0   HC_MCU_XBR                                                        09/28/2020 17:37:44 PAGE 5   

 238   1        
 239   1        ADCC0 |= 0x03;            //²Î¿¼Ô´ÎªÄÚ²¿2V
 240   1        ADCC0 |= 0x80;              //´ò¿ªADC×ª»»µçÔ´
 241   1        Delay_us(20);           //ÑÓÊ±20us£¬È·±£ADCÏµÍ³ÎÈ¶¨
 242   1        ADCC1 = 0x01;             //Ñ¡ÔñÍâ²¿Í¨µÀ1
 243   1        ADCC2 = 0x4B;         //8·ÖÆµ   //×ª»»½á¹û12Î»Êý¾Ý£¬Êý¾ÝÓÒ¶ÔÆë£¬ADCÊ±ÖÓ16·ÖÆµ-1MHZ//0X4B-8·ÖÆµ//0X49-4·ÖÆµ
 244   1      }
 245          
 246          /***************************************************************************************
 247            * @ËµÃ÷   IO¿Ú³õÊ¼»¯º¯Êý
 248            * @²ÎÊý   ÎÞ
 249            * @·µ»ØÖµ ÎÞ
 250            * @×¢     ÎÞ
 251          ***************************************************************************************/
 252          void GPIO_Init()
 253          {
 254   1        //P0M0·Ö¸ß4Î»ÓëµÍ4Î»£¬µÍ4Î»¿ØÖÆP00ÊäÈëÊä³ö£¬¸ß4Î»¿ØÖÆP01ÊäÈëÊä³ö£¬ÆäËûÒÔ´ËÀàÍÆ
 255   1        //P0M1¸ß4¿ØÖÆP03£¬µÍ4¿ØÖÆP02
 256   1        //P1M2¸ß4¿ØÖÆP15£¬µÍ4¿ØÖÆP14
 257   1        
 258   1      //  P0M0 = P0M0&0xF0|0x08;          //P00ÉèÖÃÎªÍÆÍìÊä³ö
 259   1      //  P0M0 = P0M0&0x0F|0x30;          //P01ÉèÖÃÎªÄ£ÄâÊäÈë
 260   1      //  P0M3 = P0M3&0x0F|0x30;          //P07ÉèÖÃÎªÄ£ÄâÊäÈë
 261   1      //  P0M3 = P0M3&0xF0|0x08;          //P06ÉèÖÃÎªÍÆÍìÊä³ö
 262   1        
 263   1        
 264   1        P0M0 = P0M0&0xF0|0x08;          //P00ÉèÖÃÎªÍÆÍìÊä³ö
 265   1        
 266   1        P0M0 = P0M0&0x0F|0x30;          //P01ÉèÖÃÎªÄ£ÄâÊäÈë
 267   1        //P0M3 = P0M3&0x0F|0x30;          //P07ÉèÖÃÎªÄ£ÄâÊäÈë
 268   1      //  P0M0 = P0M0&0x0F|0x80;          //P01ÉèÖÃÎªÍÆÍìÊä³ö
 269   1        
 270   1        P0M2 = P0M2&0x0F|0x80;          //P05ÉèÖÃÎªÍÆÍìÊä³ö
 271   1        
 272   1        P0M3 = P0M3&0xF0|0x03;      //P06ÉèÖÃÎªÄ£ÄâÊäÈë  //|0x08;         //P06ÉèÖÃÎªÍÆÍìÊä³ö
 273   1        
 274   1        P0M3 = P0M3&0x0F|0x20;          //P07ÉèÖÃÎªÉÏÀ­ÊäÈë 
 275   1        
 276   1      }
 277          
 278          // u16 Read_ADC(u8 Channel)
 279          // {
 280          //  u16 ADC_Temp;
 281          //  ADCC1 = Channel;              //Ñ¡ÔñÍâ²¿Í¨µÀ1
 282          //   ADCC0 |= 0x40;         //Æô¶¯ADC×ª»»
 283          //  while(!(ADCC0&0x20));   //µÈ´ýADC×ª»»½áÊø
 284          //  ADCC0 &=~ 0x20;         //Çå³ý±êÖ¾Î»
 285          //  ADC_Temp = ADCR;        //»ñÈ¡ADCµÄÖµ
 286          //  return ADC_Temp;
 287          // }
 288          
 289          /***************************************************************************************
 290            * @ËµÃ÷   ÏµÍ³Ê±ÖÓ¼ÆÊýº¯Êý
 291            * @²ÎÊý   ÎÞ
 292            * @·µ»ØÖµ ÎÞ
 293            * @×¢     ÎÞ
 294          ***************************************************************************************/
 295          /*
 296          void System_Time_Cnt(void)
 297          {
 298              static u32 Timer1Count1 = 0;
 299              static u8 Timer1Count2 = 0;
C51 COMPILER V9.52.0.0   HC_MCU_XBR                                                        09/28/2020 17:37:44 PAGE 6   

 300              u32 Tampe = 1;
 301              if(Timer1_FLAG)              //1ms
 302              {
 303                  Timer1_FLAG = 0;
 304                  Timer1Count1 ++;
 305                  Tampe = Timer1Count1 % 10;
 306                  if(Tampe == 0)
 307                      Time_10mS_FLAG = 1;
 308                  Tampe = Timer1Count1 % 100;
 309                  if(Tampe == 0)
 310                      Time_100mS_FLAG = 1;
 311                  Tampe = Timer1Count1 % 200;
 312                  if(Tampe == 0)
 313                      Time_200mS_FLAG = 1;
 314                  Tampe = Timer1Count1 % 500;
 315                  if(Tampe == 0)
 316                      Time_500mS_FLAG = 1;
 317                  Tampe = Timer1Count1 % 1000;
 318                  if(Tampe == 0)
 319                      Time_1S_FLAG = 1;
 320                  Tampe = Timer1Count1 % 10000;
 321                  if(Tampe == 0)
 322                  {
 323                      Time_10S_FLAG = 1;
 324                      Timer1Count1 = 0;
 325                      Timer1Count2 ++;
 326                      Tampe = Timer1Count2 % 6;
 327                      if(Tampe == 0)
 328                          Time_1Min_FLAG = 1;
 329                      Tampe = Timer1Count2 % 60;
 330                      if(Tampe == 0)
 331                      {
 332                          Time_1H_FLAG = 1;
 333                          Timer1Count2 = 0;
 334                      }
 335                  }
 336              }
 337          }
 338          */
 339          
 340          /***************************************************************************************
 341            * @ËµÃ÷   ÏµÍ³ÈÎÎñ´¦Àíº¯Êý
 342            * @²ÎÊý   ÎÞ
 343            * @·µ»ØÖµ ÎÞ
 344            * @×¢     ÎÞ
 345          ***************************************************************************************/
 346          
 347          /*
 348          void System_Task(void)
 349          {
 350              u8 temp;
 351              if(Time_10mS_FLAG)
 352              {
 353                  Time_10mS_FLAG = 0;
 354                  //User TASK
 355                  
 356                  
 357                  //User TASK
 358                  if(Time_100mS_FLAG)
 359                  {
 360                      Time_100mS_FLAG = 0;
 361                      //User TASK
C51 COMPILER V9.52.0.0   HC_MCU_XBR                                                        09/28/2020 17:37:44 PAGE 7   

 362          
 363                  
 364                  
 365                      //User TASK
 366                  }
 367                  if(Time_200mS_FLAG)
 368                  {
 369                      Time_200mS_FLAG = 0;
 370                      //User TASK
 371          
 372                  
 373                  
 374                      //User TASK
 375                  }
 376                  if(Time_500mS_FLAG)
 377                  {
 378                      Time_500mS_FLAG = 0;
 379                      //User TASK
 380                      AN1_Data = Read_ADC(0x01);
 381                    
 382                      //User TASK
 383                  }
 384                   if(Time_1S_FLAG)
 385                  {
 386                      Time_1S_FLAG = 0;
 387                      //User TASK
 388          
 389                      temp = 0xFF & (AN1_Data >> 8);
 390                      SBUF = temp;
 391                      while(!(SCON & 0x02));
 392                      SCON &=~ 0x02;                 //Çå³ý·¢ËÍÖÐ¶Ï±êÖ¾Î»
 393                      temp = 0xFF & AN1_Data;
 394                      SBUF = temp;
 395                      while(!(SCON & 0x02));
 396                      SCON &=~ 0x02;                 //Çå³ý·¢ËÍÖÐ¶Ï±êÖ¾Î»
 397                      P0_0 =~ P0_0; 
 398                      //User TASK
 399                      
 400                  }
 401                  if(Time_10S_FLAG)
 402                  {
 403                      Time_10S_FLAG = 0;
 404                      //User TASK
 405                      
 406          
 407                      //User TASK
 408                  }
 409                  if(Time_1Min_FLAG)
 410                  {
 411                      Time_1Min_FLAG = 0;
 412                      //User TASK
 413                  
 414                  
 415                  
 416                      //User TASK
 417                  }
 418                  if(Time_1H_FLAG)
 419                  {
 420                      Time_1H_FLAG = 0;
 421                      //User TASK
 422                  
 423                  
C51 COMPILER V9.52.0.0   HC_MCU_XBR                                                        09/28/2020 17:37:44 PAGE 8   

 424                  
 425                      //User TASK
 426                  }
 427              }
 428          }
 429          */
 430          
 431          void send_data(u8 d)
 432          {
 433   1          SBUF = d;
 434   1          while(!(SCON & 0x02));
 435   1          SCON &=~ 0x02;
 436   1      }
 437          
 438          uchar read_ad(uchar ch)
 439          {
 440   1        u8 i;
 441   1        uint  ad_sum;
 442   1        
 443   1      //  switch (ch)
 444   1      //  {
 445   1      //    case 3:
 446   1      //      ADC_P16_AN3;
 447   1      //      break;
 448   1      //    case 4:
 449   1      //      ADC_P15_AN4;
 450   1      //      break;
 451   1      //    case 5:
 452   1      //      ADC_P14_AN5;
 453   1      //      break;
 454   1      //  }
 455   1        
 456   1        
 457   1      //  if(ch==3)
 458   1      //  {
 459   1      //    ADC_P16_AN3;
 460   1      //  }
 461   1      //  else if(ch==4)
 462   1      //  {
 463   1      //    ADC_P15_AN4;
 464   1      //  }
 465   1        
 466   1        ADCC1 = ch;             //Ñ¡ÔñÍâ²¿Í¨µÀ
 467   1        ADCC0 |= 0x40;          //Æô¶¯ADC×ª»»
 468   1        while(!(ADCC0&0x20));   //µÈ´ýADC×ª»»½áÊø
 469   1        ADCC0 &=~ 0x20;         //Çå³ý±êÖ¾Î»
 470   1        
 471   1        //ADC_Temp = ADCR;        //»ñÈ¡ADCµÄÖµ 
 472   1        
 473   1      //  delay_ms(1);
 474   1      //  
 475   1      //  ADC_TG; 
 476   1        Delay_us(100);
 477   1        
 478   1        ad_sum=0;
 479   1        //ADC_INT_IF_CLR; //ÇåÖÐ¶Ï±êÖ¾Î»
 480   1        
 481   1        
 482   1        for(i=0;i<16;i++)
 483   1        {
 484   2      //    ADC_TG; 
 485   2      //    while(ADC_IF==0){};
C51 COMPILER V9.52.0.0   HC_MCU_XBR                                                        09/28/2020 17:37:44 PAGE 9   

 486   2      //    //adc_data = ADC_DATA_RD();
 487   2      //      
 488   2      //    k=ADC_DH;
 489   2      //    k =k <<8;
 490   2      //    k+=ADC_DL;
 491   2      //      
 492   2      //    ADC_INT_IF_CLR; //ÇåÖÐ¶Ï±êÖ¾Î»
 493   2      //    ad_sum+=k;
 494   2            
 495   2      
 496   2          ADCC0 |= 0x40;          //Æô¶¯ADC×ª»»
 497   2          while(!(ADCC0&0x20));   //µÈ´ýADC×ª»»½áÊø
 498   2          ADCC0 &=~ 0x20;         //Çå³ý±êÖ¾Î»
 499   2          ad_sum += ADCR;       //»ñÈ¡ADCµÄÖµ
 500   2          
 501   2          Delay_us(20);
 502   2        }
 503   1        
 504   1        //ADC_P14_AN5;
 505   1        ADCC1 =1;
 506   1        i=ad_sum>>8;
 507   1        
 508   1        Delay_us(100);
 509   1        return(i);
 510   1        
 511   1      }
 512          
 513          void set_var(void)
 514          {
 515   1        
 516   1        Flash_ReadArr(0X2f00,6,guc_Read_a); //¶ÁÈ¡µØÖ·0x2F00ËùÔÚÉÈÇø
 517   1        
 518   1        TH=guc_Read_a[0];
 519   1        TH<<=8;
 520   1        TH+=guc_Read_a[1];
 521   1        TH*=1000;
 522   1        if(TH<TH_LOW||TH>TH_HIGH)TH=TH_DEF;
 523   1        
 524   1          
 525   1        LIGHT_TH=guc_Read_a[2];
 526   1      
 527   1        if(LIGHT_TH==0)LIGHT_TH=LIGHT_TH0;
 528   1        else 
 529   1          if(LIGHT_TH==0XFE)LIGHT_TH=255;
 530   1      
 531   1        DELAY_NUM=guc_Read_a[3];
 532   1        DELAY_NUM<<=8;
 533   1        DELAY_NUM+=guc_Read_a[4];
 534   1        if(DELAY_NUM==0||DELAY_NUM>MAX_DELAY)DELAY_NUM=5;
 535   1        
 536   1        DELAY_NUM<<=2;
 537   1        lightvalue=guc_Read_a[5];
 538   1      }
 539          
 540          
 541          void XBRHandle(void)
 542          {
 543   1        u8 i,j;
 544   1        u16 k;
 545   1      //    if(while_1flag==0)
 546   1      //    send_data(0x55);
 547   1          //while(1)
C51 COMPILER V9.52.0.0   HC_MCU_XBR                                                        09/28/2020 17:37:44 PAGE 10  

 548   1          if(while_1flag==0)
 549   1          {
 550   2            //send_data(0x66);
 551   2      //        ADC_TG; 
 552   2      //        while(ADC_IF==0){};
 553   2      //        //adc_data = ADC_DATA_RD();
 554   2      //          
 555   2      //        k = ADC_DH<<8;
 556   2      //        //adc_data =adc_data <<8;
 557   2      //        k+= ADC_DL;
 558   2      //          
 559   2      //        ADC_INT_IF_CLR; //ÇåÖÐ¶Ï±êÖ¾Î»
 560   2      
 561   2            ADCC0 |= 0x40;          //Æô¶¯ADC×ª»»
 562   2            while(!(ADCC0&0x20));   //µÈ´ýADC×ª»»½áÊø
 563   2            ADCC0 &=~ 0x20;         //Çå³ý±êÖ¾Î»
 564   2            k = ADCR;       //»ñÈ¡ADCµÄÖµ
 565   2            
 566   2            times++;
 567   2            
 568   2            SUM+=k;
 569   2      
 570   2            //¼ÆËãÐÅºÅÖµÓëÖ±Á÷µçÑ¹Æ«²îÖµ
 571   2            if(k>average){k-=average;}
 572   2            else {k=average-k;}
 573   2            SUM1+=k;
 574   2      
 575   2      
 576   2            if(times>=8192) //250ms   //12800)  //330ms
 577   2            {
 578   3      
 579   3              WDTC |= 0x10;   //Çå¿´ÃÅ¹·
 580   3              
 581   3              times=0;
 582   3      
 583   3              calc_average_times++;
 584   3            
 585   3              SUM16+=SUM;
 586   3              
 587   3              if(calc_average_times>=8) //Ã¿2.5SÖØÐÂ¼ÆËãÒ»´ÎÖ±Á÷µçÑ¹Öµ
 588   3              {
 589   4                calc_average_times=0;
 590   4                
 591   4                SUM16>>=16;
 592   4                //SUM16/=96000;//102400;
 593   4                average+=SUM16;
 594   4                average/=2;
 595   4                SUM16=0;
 596   4              }
 597   3              
 598   3              if(check_light_times<8) //2s  ¶ÁÈ¡Ò»´Î¸Ð¹âADÖµ
 599   3              {
 600   4                check_light_times++;
 601   4              }
 602   3              else
 603   3              {
 604   4                if(LIGHT==0)  
 605   4                {
 606   5                  //light_ad=READ_LIGHT();
 607   5                  light_ad=read_ad(7);
 608   5      
 609   5                  if((light_ad<=(light_ad0+2))&&(light_ad0<=(light_ad+2)))
C51 COMPILER V9.52.0.0   HC_MCU_XBR                                                        09/28/2020 17:37:44 PAGE 11  

 610   5                    light_ad=light_ad0;
 611   5      
 612   5                  light_ad0=light_ad;
 613   5      
 614   5                  check_light_times=0;
 615   5                }
 616   4              }
 617   3      
 618   3              if(SUM0==0)
 619   3              {
 620   4                SUM0=SUM1+5000; 
 621   4                if(start_times==0&&SUM0>1000000)SUM0=1000000;
 622   4              }
 623   3      
 624   3              if(SUM1_counter==0)
 625   3              {
 626   4                SUM10=SUM1;
 627   4                MAX_DELTA=1;//SUM10>>3;   
 628   4                //if(MAX_DELTA<MAX_DELTA0)MAX_DELTA=MAX_DELTA0;
 629   4              }
 630   3              
 631   3                if((SUM10<(SUM1+MAX_DELTA))&&(SUM1<(SUM10+MAX_DELTA)))//???????????
 632   3                {
 633   4                  SUM1_counter++;
 634   4                  ALL_SUM1+=SUM1;
 635   4                  SUM10=ALL_SUM1/SUM1_counter;
 636   4                  MAX_DELTA=SUM10>>3;
 637   4                  if(MAX_DELTA<MAX_DELTA0)MAX_DELTA=MAX_DELTA0;
 638   4                  if(MAX_DELTA>MAX_DELTA1)MAX_DELTA=MAX_DELTA1;
 639   4                  
 640   4                  if(SUM0>SUM10)
 641   4                  {
 642   5                    SUM=SUM0-SUM10;
 643   5                    if(SUM>80000)SUM0_num=6;
 644   5                    else if(SUM>40000)SUM0_num=9;
 645   5                    else SUM0_num=12;
 646   5                  }
 647   4                  else
 648   4                  {
 649   5                    SUM0_num=12;
 650   5                  }
 651   4                  
 652   4                  if((SUM1_counter>=SUM0_num)&&(SUM10<SUM0))
 653   4                  {
 654   5                    if(SUM1_num>16) //???????????????
 655   5                    {
 656   6                      if(SUM0_num<=9)SUM0=SUM10;
 657   6                      else if(SUM0>(SUM10+4000))
 658   6                      {
 659   7                        SUM0+=SUM10;
 660   7                        SUM0/=2;
 661   7                      }
 662   6                      SUM1_counter=0;
 663   6                      ALL_SUM1=0;
 664   6                    }
 665   5                  }
 666   4      
 667   4                  else if(SUM1_counter>=SUM1_num)
 668   4                  {
 669   5                    
 670   5      //              if(SUM0>SUM10)
 671   5      //              {
C51 COMPILER V9.52.0.0   HC_MCU_XBR                                                        09/28/2020 17:37:44 PAGE 12  

 672   5      //                if(SUM1_num>16)SUM0=SUM10;  //???????????????
 673   5      //              }
 674   5      //              else 
 675   5                      
 676   5                    if(SUM10>(SUM0+4000))
 677   5                    {
 678   6                      SUM=SUM10-SUM0;
 679   6      
 680   6                      if((SUM10<8000000)&&(SUM<400000))
 681   6          //????????????,???????????????100000?,???????
 682   6                      {
 683   7                        if(SUM1_num>16) //????????????
 684   7                        {
 685   8                          SUM0+=SUM10;
 686   8                          SUM0/=2;
 687   8                        }
 688   7                        else
 689   7                        {
 690   8                          if(SUM>300000)SUM1_num=16;
 691   8                          else if(SUM>150000)SUM1_num=12;
 692   8                          else SUM1_num=8;
 693   8                          if(SUM1_counter>=SUM1_num)
 694   8                          {
 695   9                            SUM0+=SUM10;
 696   9                            SUM0/=2;
 697   9                          }
 698   8                        }
 699   7                      }
 700   6                    }
 701   5      //              else if((LIGHT>0)&&(TH==TH_LOW))
 702   5      //              {
 703   5      //                SUM=SUM10-SUM0; 
 704   5      //                TH+=SUM;    //?????????????
 705   5      //              }
 706   5      
 707   5                    if(SUM1_counter>=SUM1_num)
 708   5                    {
 709   6                      SUM1_counter=0;
 710   6                      ALL_SUM1=0;
 711   6                    }
 712   5                  }
 713   4                }
 714   3                else
 715   3                {
 716   4                  SUM1_counter=0;
 717   4                  ALL_SUM1=0;
 718   4                }
 719   3      
 720   3      
 721   3      //        //send_byte=0x35;
 722   3      //        check_sum=0xFa;
 723   3              //send_data(0xFa);
 724   3      
 725   3      //        send_byte=TH>>15;
 726   3      //        check_sum+=send_byte;
 727   3      //        send_data(send_byte);
 728   3      
 729   3      //        //k=TH;
 730   3      //        send_byte=TH>>10;
 731   3      //        check_sum+=send_byte;
 732   3      //        send_data(send_byte);
 733   3      //          
C51 COMPILER V9.52.0.0   HC_MCU_XBR                                                        09/28/2020 17:37:44 PAGE 13  

 734   3      //        send_byte=LIGHT_TH;
 735   3      //        check_sum+=send_byte;
 736   3      //        send_data(send_byte);         
 737   3      
 738   3      //        //send_byte=light_ad;
 739   3      //        check_sum+=light_ad;
 740   3      //        send_data(light_ad);
 741   3      
 742   3      //        send_byte=average>>4;
 743   3      //        check_sum+=send_byte;
 744   3      //        send_data(send_byte);
 745   3      
 746   3      //        send_byte=SUM0>>16;
 747   3      //        check_sum+=send_byte;
 748   3      //        send_data(send_byte);
 749   3      
 750   3      //        send_byte=SUM0>>8;
 751   3      //        check_sum+=send_byte;
 752   3      //        send_data(send_byte);
 753   3      
 754   3      //        send_byte=SUM1>>16;
 755   3      //        check_sum+=send_byte;
 756   3      //        send_data(send_byte);
 757   3      
 758   3      //        send_byte=SUM1>>8;
 759   3      //        check_sum+=send_byte;
 760   3      //        send_data(send_byte);
 761   3      
 762   3      //        check_sum+=1;
 763   3      //        send_data(check_sum);
 764   3      
 765   3              if(stop_times>0)  //
 766   3              {
 767   4                stop_times--; 
 768   4                if((SUM0>(SUM01+6000))&&(SUM1<(SUM01+15000)))SUM0=SUM01+6000;
 769   4              }
 770   3              else
 771   3              {
 772   4              
 773   4                if(start_times>0)
 774   4                {
 775   5                  start_times--;
 776   5                  
 777   5                  if(start_times>0) //???????????,???????250*88ms=22S?????????          
 778   5                  {
 779   6                    //start_times++;
 780   6      /*
 781   6                    if(SUM0>600000)
 782   6                    {
 783   6                      TH=10000;
 784   6                    }
 785   6                    else */
 786   6                    if(SUM0>8000000)
 787   6                    {
 788   7                      TH=800000;
 789   7                    }
 790   6                    else
 791   6                    {
 792   7                      SUM=SUM0+TH;
 793   7                      if(SUM>9000000)
 794   7                      {
 795   8                        TH=9000000-SUM0;
C51 COMPILER V9.52.0.0   HC_MCU_XBR                                                        09/28/2020 17:37:44 PAGE 14  

 796   8                      }
 797   7                      //if(TH<30000)TH=30000;
 798   7                    }
 799   6      
 800   6                  }
 801   5                  else
 802   5                  {
 803   6                    //TH=TH_LOW;
 804   6                    //start_times=0;
 805   6      //              EA=0;
 806   6      //              set_var();
 807   6      //              EA=1;
 808   6                  }
 809   5      
 810   5                }
 811   4      
 812   4                if(SUM1>(SUM0+TH))
 813   4                {
 814   5                  //SUM=SUM1-SUM0;
 815   5      
 816   5                //  if(SUM>TH)
 817   5                //  {
 818   5                    if((light_ad<=LIGHT_TH)||(start_times>0))
 819   5                    {
 820   6      //                send_data(0xaa);
 821   6      
 822   6                      
 823   6                      //if(alarm_times<2)
 824   6                      //{
 825   6                      //  alarm_times++;
 826   6                    //    }
 827   6                      //if(alarm_times>=2)  //??????????????
 828   6                      {
 829   7                        if(LIGHT==0)SUM01=SUM0;
 830   7                        LIGHT=1;
 831   7                    
 832   7                        //PC3=0;
 833   7                        LIGHT_ON;
 834   7                        PWM3init(100);
 835   7                        //P0_6=0;
 836   7                        send_data(0xaa);
 837   7                        send_data((TH/1000)>>8);
 838   7                        send_data((TH/1000)&0xff);
 839   7                        send_data(LIGHT_TH);
 840   7                        send_data(DELAY_NUM>>10);
 841   7                        send_data(DELAY_NUM>>2);    //²âÊÔÓÃ
 842   7                        send_data(0xaa);  
 843   7                        SUM1_num=8;
 844   7      
 845   7        //                send_data(0xaa);
 846   7      
 847   7                      }
 848   6                    }
 849   5                
 850   5                  }
 851   4      
 852   4              }
 853   3      
 854   3              SUM2=SUM1;
 855   3              send_data(average>>4);
 856   3              send_data(SUM0>>16);
 857   3              send_data(SUM0>>8);
C51 COMPILER V9.52.0.0   HC_MCU_XBR                                                        09/28/2020 17:37:44 PAGE 15  

 858   3              send_data(SUM2>>16);
 859   3              send_data(SUM2>>8);     //20200927  ²âÊÔÓÃ        
 860   3              
 861   3              SUM=0;
 862   3              SUM1=0;
 863   3              
 864   3              if(LIGHT>0) //????
 865   3              {
 866   4                LIGHT++;
 867   4                if(LIGHT>DELAY_NUM)
 868   4                {
 869   5                  LIGHT=0;
 870   5                  while_1flag=1;
 871   5                  while_2flag = 0;
 872   5                  //break;
 873   5                }
 874   4              }       
 875   3              
 876   3            }
 877   2      
 878   2      
 879   2          }
 880   1          else
 881   1          {
 882   2          
 883   2              while_1flag=0;
 884   2              if(while_2flag==0)
 885   2              {
 886   3                while_2flag = 1;
 887   3                send_data(0x55);
 888   3              }
 889   2              //PC3=1;
 890   2              LIGHT_OFF;
 891   2              PWM3init(lightvalue);
 892   2              //P0_6=1;
 893   2              //send_data(0x55);
 894   2              Delay_ms(250);
 895   2      
 896   2      
 897   2              
 898   2          //    SUM=0;
 899   2          //    SUM1=0;
 900   2          //    times=0;
 901   2              
 902   2              SUM16=0;
 903   2              calc_average_times=0;
 904   2              SUM1_num=64;
 905   2              
 906   2              stop_times=2;
 907   2              //if(start_times==0)TH=TH_LOW;
 908   2              check_light_times=6;
 909   2              
 910   2              SUM1_counter=0;
 911   2              ALL_SUM1=0;
 912   2      
 913   2          //    send_data(0xdd);
 914   2          //    send_data(0xdd);
 915   2          }
 916   1      
 917   1      }
*** WARNING C280 IN LINE 543 OF ..\User\HC-MCU-XBR.c: 'i': unreferenced local variable
*** WARNING C280 IN LINE 543 OF ..\User\HC-MCU-XBR.c: 'j': unreferenced local variable
C51 COMPILER V9.52.0.0   HC_MCU_XBR                                                        09/28/2020 17:37:44 PAGE 16  

 918          
 919          
 920          void wait1(void)
 921          {
 922   1        u8 i,j;
 923   1      
 924   1        //µÈ´ýÖ±Á÷µçÑ¹ÎÈ¶¨
 925   1        j=0;
 926   1        while(1)
 927   1        {
 928   2          SUM=0;
 929   2          
 930   2          
 931   2      //    for(i=0;i<4;i++)  //0.52s
 932   2      //    {
 933   2      //      for(t=0;t<8192;t++) //0.13s
 934   2      //      {
 935   2      
 936   2      //        ADCC0 |= 0x40;          //Æô¶¯ADC×ª»»
 937   2      //        while(!(ADCC0&0x20));   //µÈ´ýADC×ª»»½áÊø
 938   2      //        ADCC0 &=~ 0x20;         //Çå³ý±êÖ¾Î»
 939   2      //        k = ADCR;       //»ñÈ¡ADCµÄÖµ
 940   2      //        
 941   2      //        SUM+=k;
 942   2      //  
 943   2      //      }
 944   2      //      
 945   2      //      WDTC |= 0x10;   //Çå¿´ÃÅ¹·
 946   2            
 947   2      
 948   2            for(i=0;i<128;i++)  //
 949   2            {
 950   3      
 951   3              ADCC0 |= 0x40;          //Æô¶¯ADC×ª»»
 952   3              while(!(ADCC0&0x20));   //µÈ´ýADC×ª»»½áÊø
 953   3              ADCC0 &=~ 0x20;         //Çå³ý±êÖ¾Î»
 954   3              //k = ADCR;       //»ñÈ¡ADCµÄÖµ
 955   3              
 956   3              SUM+=ADCR;
 957   3              
 958   3            }
 959   2      
 960   2      //·¢ËÍ¸Ð¹âADÖµ
 961   2      //        send_byte=0xFA;
 962   2      //        check_sum=send_byte;
 963   2      //        send_data(send_byte);
 964   2      
 965   2      //        //send_byte=light_ad;
 966   2      //        check_sum+=light_ad;
 967   2      //        send_data(light_ad);
 968   2      
 969   2      //        check_sum+=light_ad;
 970   2      //        send_data(light_ad);
 971   2      //        
 972   2      //        check_sum+=1;
 973   2      //        send_data(check_sum);
 974   2      
 975   2      
 976   2      
 977   2        //}
 978   2          
 979   2          Delay_ms(400);
C51 COMPILER V9.52.0.0   HC_MCU_XBR                                                        09/28/2020 17:37:44 PAGE 17  

 980   2            
 981   2      
 982   2          
 983   2          //WDTC |= 0x10;   //Çå¿´ÃÅ¹·
 984   2      
 985   2          i=SUM>>11;
 986   2          if((i>12)&&(i<141)&&(j>20))break;
 987   2      
 988   2          j++;
 989   2      
 990   2          if(j>80)break;  //??35????????????1.1V???????
 991   2      
 992   2        }
 993   1      }
 994          void wait2(void)
 995          {
 996   1        u8 i,j;
 997   1        u16 k,t;
 998   1      
 999   1        SUM=0;
1000   1      
1001   1      
1002   1          for(i=0;i<8;i++)
1003   1          {
1004   2            for(t=0;t<8192;t++) 
1005   2            {
1006   3      //        ADC_TG; 
1007   3      //        while(ADC_IF==0){};
1008   3      //        //adc_data = ADC_DATA_RD();
1009   3      //          
1010   3      //        k = ADC_DH<<8;
1011   3      //        //adc_data =adc_data <<8;
1012   3      //        k+= ADC_DL;
1013   3      //          
1014   3      //        ADC_INT_IF_CLR; //ÇåÖÐ¶Ï±êÖ¾Î»
1015   3          
1016   3              ADCC0 |= 0x40;          //Æô¶¯ADC×ª»»
1017   3              while(!(ADCC0&0x20));   //µÈ´ýADC×ª»»½áÊø
1018   3              ADCC0 &=~ 0x20;         //Çå³ý±êÖ¾Î»
1019   3              k = ADCR;       //»ñÈ¡ADCµÄÖµ
1020   3              
1021   3              SUM+=k;
1022   3        
1023   3            }
1024   2            WDTC |= 0x10;   //Çå¿´ÃÅ¹·
1025   2      
1026   2          }
1027   1      
1028   1          average=SUM>>16;
1029   1      
1030   1      
1031   1      //  light_ad=read_ad(7);
1032   1      //  light_ad0=light_ad;
1033   1      
1034   1      //  Delay_ms(4);  //4ms
1035   1      }
*** WARNING C280 IN LINE 996 OF ..\User\HC-MCU-XBR.c: 'j': unreferenced local variable
1036          
1037          unsigned char PWM3init(unsigned char ab)
1038          {
1039   1         float i11;
1040   1        unsigned char j11;
C51 COMPILER V9.52.0.0   HC_MCU_XBR                                                        09/28/2020 17:37:44 PAGE 18  

1041   1        i11=ab*255/100;
1042   1        j11=i11;
1043   1      /************************************PWM3³õÊ¼»¯****************************************/
1044   1        //P0M3 = P0M3&0xF0|0x08;    //P06ÉèÖÃÎªÍÆÍìÊä³ö
1045   1        PWM3_MAP = 0x05;          //PWM3Ó³ÉäP05¿Ú
1046   1        
1047   1          //ÖÜÆÚ¼ÆËã  = 0xFF / (Fosc / PWM·ÖÆµÏµÊý)   £¨Fosc¼ûÏµÍ³Ê±ÖÓÅäÖÃµÄ²¿·Ö£©
1048   1        //      = 0xFF /(16000000 / 4)      
1049   1        //      = 255 /4000000
1050   1        //      = 63.75us   ¼´15.69KHZ    
1051   1      
1052   1        PWM3P = 0xFF;             //PWMÖÜÆÚÎª0xFF
1053   1        //ÓÐÐ§µçÆ½Ê±¼ä¼ÆËã£¨¼´Õ¼¿Õ±È£©  
1054   1        //      = 0x55 / (Fosc / PWM·ÖÆµÏµÊý)   £¨Fosc¼ûÏµÍ³Ê±ÖÓÅäÖÃµÄ²¿·Ö£©
1055   1        //      = 0x55 /(16000000 / 4)      
1056   1        //      = 85 /4000000
1057   1        //      = 21.25us   Õ¼¿Õ±ÈÎª 21.25 / 63.75 = 34%
1058   1      
1059   1        PWM3D = j11;              //PWMÕ¼¿Õ±ÈÉèÖÃ
1060   1        PWM3C = 0x94;             //Ê¹ÄÜPWM3£¬¹Ø±ÕÖÐ¶Ï£¬ÔÊÐíÊä³ö£¬Ê±ÖÓ16·ÖÆµ
1061   1      }
*** WARNING C173 IN LINE 1061 OF ..\User\HC-MCU-XBR.c: missing return-expression
1062          
1063          /***************************************************************************************
1064            * @ËµÃ÷   Ö÷º¯Êý
1065            * @²ÎÊý   ÎÞ
1066            * @·µ»ØÖµ ÎÞ
1067            * @×¢     ÎÞ
1068          ***************************************************************************************/
1069          void main()
1070          {
1071   1        u8 i,j;
1072   1        bt_protocol_init();
1073   1        InitSYS();
1074   1        GPIO_Init();
1075   1        LIGHT_ON;
1076   1        //P0_6=0;
1077   1        PWM3init(100);
1078   1        Timer_Init();
1079   1        UART1_Init();
1080   1        ADC_Init();
1081   1      
1082   1        LVDC = 0xAA;              //LVDÉèÖÃ2.4V,½ûÖ¹ÖÐ¶Ï
1083   1        //  Ïû¶¶Ê±¼ä =  (0xFF + 2) * 1/Fcpu
1084   1        //       =  (0xFF + 2) / 16000000 £¨µ±Ç°µÄCPUÊ±ÖÓ£©
1085   1        //       =  16.0625us
1086   1        LVDDBC = 0xFF;            //ÉèÖÃÏû¶¶Ê±¼ä
1087   1        LVDC &=~ 0x08;            //Çå³ýLVDÖÐ¶Ï±êÖ¾Î»   
1088   1      //  
1089   1        EA=1;
1090   1        
1091   1        Delay_ms(200);
1092   1        
1093   1        LIGHT_ON;
1094   1        PWM3init(100);
1095   1        SWITCHflag = 1;
1096   1        light_ad=read_ad(7);
1097   1        light_ad0=light_ad;
1098   1        
1099   1        EA=0;
1100   1        set_var();
1101   1        
C51 COMPILER V9.52.0.0   HC_MCU_XBR                                                        09/28/2020 17:37:44 PAGE 19  

1102   1        //for(i=0;i<5;i++)send_data(guc_Read_a[i]);
1103   1        
1104   1      //  TXdata[0]=VERSION;
1105   1      //  t=TH/1000;
1106   1      //  TXdata[1]=t>>8;
1107   1      //  TXdata[2]=t;
1108   1      //  TXdata[3]=LIGHT_TH;
1109   1      //  t=DELAY_NUM/4;
1110   1      //  TXdata[4]=t>>8;
1111   1      //  TXdata[5]=t;
1112   1      
1113   1      //  TXdata[6]=light_ad;
1114   1      
1115   1      //  for(i=0;i<7;i++)send_data(TXdata[i]); 
1116   1        
1117   1        EA=1;
1118   1        
1119   1      
1120   1        wait1();
1121   1      
1122   1        
1123   1        //Delay_ms(200);
1124   1        PWM3init(lightvalue);
1125   1        LIGHT_OFF;
1126   1        //P0_6=1;
1127   1        Delay_ms(300);
1128   1        
1129   1        wait2();
1130   1      
1131   1        SUM=0;
1132   1        while(1)
1133   1        {
1134   2          WDTC |= 0x10;   //Çå¿´ÃÅ¹·
1135   2          bt_uart_service();
1136   2          
1137   2      
1138   2          XBRHandle();
1139   2        
1140   2      
1141   2      
1142   2        } 
1143   1        
1144   1      //  while(1)
1145   1      //  {
1146   1      //    System_Time_Cnt();
1147   1      //    System_Task();
1148   1      //    WDTC |= 0x10;              //Çå¹·
1149   1      //  }
1150   1      
1151   1        
1152   1        
1153   1      }
*** WARNING C280 IN LINE 1071 OF ..\User\HC-MCU-XBR.c: 'i': unreferenced local variable
*** WARNING C280 IN LINE 1071 OF ..\User\HC-MCU-XBR.c: 'j': unreferenced local variable
1154          
1155          /***************************************************************************************
1156            * @ËµÃ÷   T1ÖÐ¶Ï·þÎñº¯Êý
1157            * @²ÎÊý   ÎÞ
1158            * @·µ»ØÖµ ÎÞ
1159            * @×¢     ÎÞ
1160          ***************************************************************************************/
1161          void TIMER1_Rpt(void) interrupt TIMER1_VECTOR
C51 COMPILER V9.52.0.0   HC_MCU_XBR                                                        09/28/2020 17:37:44 PAGE 20  

1162          {
1163   1        //Timer1_FLAG = 1;    //1mS
1164   1        Timer_Counter++;
1165   1      
1166   1        //if(SWITCHflag==1)
1167   1        //{
1168   1        //  colorRcnt++;
1169   1        //  if(colorRcnt)
1170   1      ///
1171   1      
1172   1        //}
1173   1      
1174   1      
1175   1        
1176   1      }
1177          
1178          /***************************************************************************************
1179            * @ËµÃ÷   UART1ÖÐ¶Ï·þÎñº¯Êý
1180            * @²ÎÊý   ÎÞ
1181            * @·µ»ØÖµ ÎÞ
1182            * @×¢     ÎÞ
1183          ***************************************************************************************/
1184          
1185          void UART1_Rpt(void) interrupt UART1_VECTOR
1186          {
1187   1        u8 i;
1188   1        //u16 t;
1189   1        
1190   1        if(SCON & 0x01)                       //ÅÐ¶Ï½ÓÊÕÖÐ¶Ï±êÖ¾Î»
1191   1        {
1192   2            i=SBUF;
1193   2            uart_receive_input(i);
1194   2            SCON &=~ 0x01;                    //Çå³ý½ÓÊÕÖÐ¶Ï±êÖ¾Î»
1195   2            EA=1;
1196   2        }
1197   1      }
1198          
1199          void UART2_Rpt(void) interrupt UART2_VECTOR
1200          {
1201   1      }
1202          
1203          // void Delay_2us(u16 Cnt)
1204          // {
1205          //  while(Cnt--); 
1206          // }
1207          
1208          void Flash_EraseBlock(unsigned int fui_Address)
1209          {
1210   1        while(1)
1211   1        {
1212   2          LVDC &=~ 0x08;        //Çå³ýLVDÖÐ¶Ï±êÖ¾Î»
1213   2          P0_0=0;   
1214   2          if((LVDC&0x08)==0)    break;
1215   2        }
1216   1        P0_0=1;   
1217   1        EA=0;
1218   1        IAP_CMD = 0xF00F;       //Flash½âËø
1219   1        IAP_ADDR = fui_Address; //Ð´Èë²Á³ýµØÖ·
1220   1        IAP_CMD = 0xD22D;       //Ñ¡Ôñ²Ù×÷·½Ê½£¬ ÉÈÇø²Á³ý
1221   1        IAP_CMD = 0xE11E;       //´¥·¢ºóIAP_ADDRL&IAP_ADDRHÖ¸Ïò0xFF£¬Í¬Ê±×Ô¶¯Ëø¶¨
1222   1        //EA=1;
1223   1      }
C51 COMPILER V9.52.0.0   HC_MCU_XBR                                                        09/28/2020 17:37:44 PAGE 21  

1224          
1225          /**
1226            * @ËµÃ÷   Ð´ÈëÒ»¸ö×Ö½ÚÊý¾Ýµ½FlashÀïÃæ
1227            *         ¸Ãº¯ÊýÐè¾ø¶ÔµØÖ·±àÒë£¬ÏêÇéÇë²éÔÄIAP²Ù×÷Ó¦ÓÃÊÖ²á
1228            * @²ÎÊý   fui_Address £ºFLASHµØÖ·
1229            * @²ÎÊý   fucp_SaveData£ºÐ´ÈëµÄÊý¾Ý
1230            * @·µ»ØÖµ ÎÞ
1231            * @×¢     Ð´Ö®Ç°±ØÐëÏÈ¶Ô²Ù×÷µÄÉÈÇø½øÐÐ²Á³ý
1232            */
1233          void FLASH_WriteData(unsigned char fuc_SaveData, unsigned int fui_Address)
1234          {
1235   1        while(1)
1236   1        {
1237   2          LVDC &=~ 0x08;         //Çå³ýLVDÖÐ¶Ï±êÖ¾Î»
1238   2          P0_0=0;   
1239   2          if((LVDC&0x08)==0)    break;
1240   2        }
1241   1        P0_0=1; 
1242   1        EA=0;
1243   1        IAP_DATA = fuc_SaveData;
1244   1        IAP_CMD=0xF00F;          //Flash½âËø
1245   1        IAP_ADDR = fui_Address;
1246   1        IAP_CMD=0xB44B;          //×Ö½Ú±à³Ì
1247   1        IAP_CMD=0xE11E;          //´¥·¢Ò»´Î²Ù×÷
1248   1        //EA=1;
1249   1      }
1250          
1251          /**
1252            * @ËµÃ÷   Ð´ÈëÈÎÒâ³¤¶ÈµÄÊý¾Ýµ½FLASHÀïÃæ
1253            *         ¸Ãº¯ÊýÐè¾ø¶ÔµØÖ·±àÒë£¬ÏêÇéÇë²éÔÄIAP²Ù×÷Ó¦ÓÃÊÖ²á
1254            * @²ÎÊý   fui_Address £ºFLASHÆðÊ¼µØÖ·
1255            * @²ÎÊý   fuc_Length £º Ð´ÈëÊý¾Ý³¤¶È
1256            *         È¡Öµ·¶Î§£º0x00-0xFF
1257            * @²ÎÊý  *fucp_SaveArr£ºÐ´ÈëµÄÊý¾Ý´æ·ÅÇøÓòµÄÊ×µØÖ·
1258            * @·µ»ØÖµ ÎÞ
1259            * @×¢     Ð´Ö®Ç°±ØÐëÏÈ¶Ô²Ù×÷µÄÉÈÇø½øÐÐ²Á³ý
1260            */
1261          
1262          // void Flash_WriteArr(unsigned int fui_Address,unsigned char fuc_Length,unsigned char *fucp_SaveArr)
1263          // {
1264          //  unsigned char fui_i = 0;
1265          //  EA=0;
1266          //  for(fui_i=0;fui_i<fuc_Length;fui_i++)
1267          //  {
1268          //    FLASH_WriteData(*(fucp_SaveArr++), fui_Address++); 
1269          //  }
1270          //  EA=1;
1271          // }
1272          
1273          /**
1274            * @ËµÃ÷   ´ÓFLASHÀïÃæ¶ÁÈ¡ÈÎÒâ³¤¶ÈµÄÊý¾Ý
1275            * @²ÎÊý   fui_Address £ºFLASHÆðÊ¼µØÖ·
1276            * @²ÎÊý   fuc_Length £º¶ÁÈ¡Êý¾Ý³¤¶È
1277            *         È¡Öµ·¶Î§£º0x00-0xFF
1278            * @²ÎÊý  *fucp_SaveArr£º¶ÁÈ¡Êý¾Ý´æ·ÅµÄÇøÓòÊ×µØÖ·
1279            * @·µ»ØÖµ ÎÞ
1280            * @×¢     ÎÞ
1281            */
1282          
*** WARNING C290 IN LINE 1061 OF ..\User\HC-MCU-XBR.c: missing return value


C51 COMPILER V9.52.0.0   HC_MCU_XBR                                                        09/28/2020 17:37:44 PAGE 22  

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3700    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     72    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6      19
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  8 WARNING(S),  0 ERROR(S)
